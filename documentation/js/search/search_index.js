var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AllExceptionsFilter.html",[0,0.209,1,2.445]],["body/classes/AllExceptionsFilter.html",[0,0.189,1,3.095,2,1.006,3,0.366,4,0.328,5,0.291,6,4.417,7,2.536,8,2.273,9,2.875,10,0.447,11,1.302,12,2.273,13,4.475,14,1.515,15,2.206,16,1.373,17,2.216,18,1.501,19,3.022,20,1.302,21,0.029,22,1.208,23,0.653,24,1.302,25,3.022,26,2.273,27,2.209,28,2.835,29,3.022,30,2.619,31,1.085,32,1.492,33,1.391,34,2.761,35,1.787,36,0.865,37,1.628,38,2.083,39,2.273,40,1.492,41,0.366,42,2.216,43,2.536,44,1.988,45,1.628,46,1.628,47,1.628,48,1.787,49,2.273,50,2.536,51,1.977,52,2.216,53,1.977,54,1.787,55,1.977,56,1.267,57,2.216,58,1.787,59,1.787,60,1.787,61,3.022,62,2.216,63,1.977,64,1.172,65,2.216,66,0.019,67,0.019]],["title/modules/ApiModule.html",[68,1.397,69,1.971]],["body/modules/ApiModule.html",[0,0.27,3,0.522,4,0.468,5,0.416,21,0.03,33,1.657,36,1.234,37,2.323,41,0.522,66,0.023,67,0.023,68,2.236,69,3.154,70,2.323,71,4.313,72,5.335,73,3.491,74,4.313,75,4.313,76,3.163,77,2.323,78,4.313,79,4.313]],["title/controllers/AppController.html",[80,2.181,81,2.181]],["body/controllers/AppController.html",[0,0.227,3,0.439,4,0.393,5,0.35,10,0.536,12,2.876,14,1.715,16,1.647,18,1.119,21,0.03,31,1.302,33,1.624,36,1.038,41,0.439,43,3.043,58,2.144,66,0.021,67,0.021,80,3.125,81,3.125,82,2.659,83,3.043,84,3.916,85,5.675,86,3.626,87,3.626,88,3.626,89,4.776,90,4.776,91,5.34,92,2.373,93,2.636,94,3.626,95,3.502,96,3.626,97,3.043,98,4.008,99,4.776,100,3.626,101,2.144,102,3.626,103,3.626]],["title/modules/AppModule.html",[68,1.397,104,2.181]],["body/modules/AppModule.html",[0,0.169,3,0.327,4,0.293,5,0.26,21,0.03,27,1.225,33,1.796,36,0.772,41,0.327,66,0.017,67,0.017,68,1.915,69,3.267,70,1.453,76,3.35,77,2.097,81,2.989,82,2.855,84,1.978,92,1.765,104,3.815,105,1.453,106,1.978,107,1.978,108,1.453,109,1.978,110,2.264,111,2.264,112,3.367,113,2.855,114,1.978,115,1.765,116,2.697,117,2.697,118,2.697,119,2.697,120,2.697,121,3.893,122,2.51,123,2.264,124,2.697,125,3.893,126,2.697,127,3.893,128,2.697,129,3.893,130,2.697,131,2.697,132,3.893,133,2.697,134,3.893,135,2.697,136,2.697,137,2.697,138,2.697,139,2.697,140,2.697,141,2.264,142,2.697,143,2.264,144,2.697,145,2.697]],["title/classes/BadRequestExceptionFilter.html",[0,0.209,146,2.445]],["body/classes/BadRequestExceptionFilter.html",[0,0.191,2,0.647,3,0.235,4,0.211,5,0.187,8,1.638,9,2.215,10,0.287,11,0.939,12,1.638,13,3.979,14,1.092,15,1.929,16,0.882,17,1.425,18,1.308,20,1.156,21,0.03,22,1.072,23,0.569,24,1.156,26,1.638,27,1.702,28,2.283,30,1.638,31,1.092,32,0.959,33,1.51,35,1.149,36,0.556,37,1.047,38,0.959,39,1.638,40,0.959,41,0.235,42,1.425,44,2.031,45,1.047,46,1.047,47,1.047,48,1.149,50,1.631,51,1.271,54,1.798,56,1.777,59,1.798,64,1.179,66,0.013,67,0.013,98,3.144,146,2.23,147,3.861,148,1.631,149,3.041,150,1.943,151,1.943,152,3.041,153,4.879,154,1.943,155,3.747,156,3.557,157,1.943,158,1.631,159,1.631,160,1.631,161,1.425,162,1.425,163,3.144,164,1.631,165,2.045,166,1.943,167,1.631,168,1.943,169,1.943,170,1.943,171,3.041,172,1.943,173,1.943,174,1.943,175,1.943,176,1.943,177,1.631,178,1.943,179,1.631,180,1.943,181,1.149,182,1.631,183,1.943,184,1.943,185,1.943,186,1.638,187,5.278,188,2.23,189,3.108,190,1.631,191,3.108,192,1.943,193,2.552,194,3.041,195,2.23,196,1.631,197,1.631,198,1.631,199,1.631,200,1.631,201,1.631,202,1.631,203,1.631,204,1.943,205,1.631,206,1.631,207,1.943,208,1.943,209,1.943,210,2.552,211,1.943]],["title/classes/ConfigService.html",[0,0.209,122,1.514]],["body/classes/ConfigService.html",[0,0.162,2,0.529,3,0.193,4,0.173,5,0.153,10,0.235,12,2.404,14,0.93,16,1.489,18,1.682,20,0.8,21,0.03,22,0.741,23,0.44,24,0.8,27,0.722,31,0.93,33,1.404,41,0.314,44,1.357,58,1.531,66,0.011,67,0.011,101,3.221,122,1.489,143,1.334,212,1.334,213,1.166,214,2.591,215,1.695,216,2.591,217,2.591,218,4.707,219,3.278,220,3.278,221,3.278,222,3.278,223,3.278,224,3.278,225,3.278,226,3.278,227,1.59,228,2.591,229,1.384,230,1.59,231,2.591,232,2.591,233,1.59,234,1.531,235,1.59,236,1.59,237,1.59,238,1.59,239,1.59,240,1.59,241,1.59,242,1.59,243,1.59,244,1.59,245,1.59,246,1.59,247,1.59,248,1.59,249,1.59,250,1.59,251,1.59,252,1.59,253,2.591,254,1.695,255,1.59,256,1.695,257,1.59,258,1.695,259,1.59,260,1.59,261,1.04,262,1.59,263,1.695,264,1.59,265,1.695,266,1.59,267,1.695,268,1.59,269,1.59,270,1.59,271,2.591,272,2.174,273,1.59,274,1.59,275,2.591,276,1.334,277,1.59,278,1.59,279,3.278,280,1.166,281,1.59,282,1.59,283,1.59,284,1.59,285,1.59,286,1.59,287,1.59,288,1.59,289,1.59,290,1.59,291,1.59,292,1.334,293,1.59,294,1.59,295,2.591,296,1.334,297,1.59,298,1.59,299,1.59,300,1.334,301,1.59,302,2.591,303,1.59,304,1.59,305,1.59,306,1.59,307,1.59,308,1.59,309,1.334,310,1.59,311,1.59,312,1.59,313,1.59,314,2.174,315,1.59,316,1.59,317,1.59,318,1.59,319,1.59,320,1.59,321,1.334,322,1.59,323,1.334,324,1.59,325,1.334,326,1.59,327,1.334,328,1.59,329,1.334,330,1.59,331,1.334,332,1.59,333,1.334,334,1.59,335,1.334,336,1.59,337,1.334,338,1.59,339,1.59,340,1.59,341,1.59,342,1.59,343,1.59,344,1.59,345,1.334,346,1.59,347,1.334,348,1.59,349,1.334,350,1.59,351,1.334,352,1.59,353,1.334,354,1.59,355,1.334,356,1.59,357,1.334,358,1.59,359,1.334,360,1.59,361,1.334,362,1.59,363,1.334,364,1.59,365,1.334,366,1.59,367,1.334,368,1.59,369,1.334,370,1.59,371,1.334,372,1.59,373,1.334,374,1.59,375,1.334,376,1.59,377,1.334,378,1.59,379,1.334,380,1.59,381,1.334,382,1.59,383,1.334,384,1.59,385,1.334,386,1.59,387,1.334,388,1.59,389,1.334,390,1.59,391,1.334,392,1.59]],["title/classes/FileNotImageException.html",[0,0.209,393,2.445]],["body/classes/FileNotImageException.html",[0,0.248,2,1.319,3,0.48,4,0.43,5,0.382,16,1.8,18,1.223,20,1.223,21,0.029,22,1.134,23,0.532,24,1.223,33,1.134,36,1.134,41,0.48,60,2.991,64,2.276,66,0.022,67,0.022,156,4.677,229,1.645,393,3.71,394,4.246,395,3.327,396,3.31,397,5.059,398,3.964,399,3.71,400,1.223,401,1.537,402,3.964,403,3.964]],["title/modules/HelperModule.html",[68,1.397,112,1.971]],["body/modules/HelperModule.html",[0,0.256,3,0.35,4,0.313,5,0.278,21,0.03,33,1.699,36,1.17,41,0.495,44,1.037,66,0.018,67,0.018,68,2.282,70,1.556,76,3.48,77,3.13,82,2.998,93,3.17,105,1.556,106,2.118,107,2.118,108,1.556,109,3.993,112,3.57,113,2.998,114,2.118,115,1.89,122,2.743,404,2.424,405,2.424,406,2.424,407,2.118,408,2.424,409,4.088,410,2.888,411,2.888,412,4.088,413,2.888,414,4.745,415,2.888,416,4.745,417,2.888]],["title/classes/HttpErrorFilter.html",[0,0.209,73,2.181]],["body/classes/HttpErrorFilter.html",[0,0.159,2,0.844,3,0.307,4,0.275,5,0.245,8,2.005,9,3.059,10,0.375,14,1.337,15,2.169,18,0.783,20,0.783,21,0.03,22,0.726,23,0.34,24,0.783,26,2.005,27,2.003,28,2.617,30,2.005,31,0.911,32,1.252,33,1.39,34,3.179,35,1.5,36,0.726,38,1.252,39,1.366,41,0.307,44,2.165,45,1.366,46,1.366,47,1.366,48,1.5,49,2.617,51,2.436,52,3.234,53,1.66,55,1.66,56,1.849,58,1.5,59,2.872,60,1.5,62,1.86,63,1.66,64,1.443,65,1.86,66,0.016,67,0.016,73,2.436,161,1.86,162,1.86,165,2.037,181,1.5,186,1.366,188,3.234,189,2.73,191,2.73,193,2.129,195,3.234,196,2.129,197,2.129,198,2.129,199,2.129,200,2.129,201,2.129,202,2.129,203,2.129,205,3.124,206,2.129,418,3.124,419,2.129,420,2.537,421,2.129,422,2.537,423,2.537,424,1.66,425,1.86,426,2.537,427,2.537,428,2.129,429,2.129,430,2.537,431,2.537]],["title/classes/HttpExceptionFilter.html",[0,0.209,432,2.445]],["body/classes/HttpExceptionFilter.html",[0,0.224,2,1.189,3,0.433,4,0.388,5,0.344,8,2.547,9,3.134,10,0.528,14,1.698,15,2.222,18,1.103,20,1.103,21,0.029,22,1.022,23,0.48,24,1.103,26,2.547,27,2.408,28,3.039,30,1.925,31,1.283,32,1.764,33,1.353,34,3.692,36,1.022,38,2.334,39,2.547,40,1.764,41,0.433,44,2.026,45,1.925,46,1.925,47,1.925,48,2.112,49,2.547,51,2.338,54,2.112,55,2.338,56,1.498,57,2.621,58,2.112,59,2.112,66,0.021,67,0.021,432,3.469,433,3.969,434,2.621,435,3.573,436,3.573,437,2.621]],["title/interfaces/IAwsConfig.html",[254,2.181,438,0.757]],["body/interfaces/IAwsConfig.html",[3,0.416,4,0.373,5,0.331,10,0.508,11,1.422,21,0.029,23,0.842,41,0.416,66,0.02,67,0.02,229,1.785,254,3.014,321,4.661,323,4.661,325,4.661,327,4.661,329,4.661,331,4.661,333,4.661,335,4.661,337,4.661,400,1.06,401,1.332,438,0.78,439,1.44,440,2.883]],["title/interfaces/IFile.html",[438,0.757,441,2.445]],["body/interfaces/IFile.html",[3,0.46,4,0.412,5,0.366,10,0.561,11,1.518,21,0.028,23,0.823,41,0.46,66,0.022,67,0.022,229,1.732,234,3.227,400,1.171,401,1.471,438,0.861,439,1.591,441,3.608,442,3.185,443,6.241,444,5.775,445,5.775,446,5.775,447,5.775,448,5.775]],["title/interfaces/IJWTConfig.html",[256,2.181,438,0.757]],["body/interfaces/IJWTConfig.html",[3,0.46,4,0.412,5,0.366,10,0.561,11,1.518,21,0.028,23,0.823,41,0.46,66,0.022,67,0.022,229,1.732,234,3.624,256,3.219,345,4.847,347,4.847,349,4.847,351,4.847,353,4.847,355,4.847,400,1.171,401,1.471,438,0.861,439,1.591,449,3.185]],["title/interfaces/INodeEmailerConfig.html",[258,2.181,438,0.757]],["body/interfaces/INodeEmailerConfig.html",[3,0.458,4,0.41,5,0.364,10,0.559,11,1.514,21,0.028,23,0.822,41,0.458,66,0.022,67,0.022,229,1.755,234,3.221,258,3.211,365,4.84,367,4.84,369,4.84,371,4.84,373,4.84,375,4.84,400,1.167,401,1.466,438,0.858,439,1.585,450,3.172,451,3.172]],["title/interfaces/IPostgreSQLConfig.html",[261,2.181,438,0.757]],["body/interfaces/IPostgreSQLConfig.html",[3,0.43,4,0.385,5,0.342,10,0.525,11,1.453,21,0.028,23,0.837,41,0.43,66,0.021,67,0.021,229,1.782,261,3.08,400,1.095,401,1.375,438,0.805,439,1.487,452,2.977,453,5.626,454,5.626,455,5.626,456,5.626,457,5.626,458,5.626,459,5.626,460,5.626]],["title/interfaces/ISMSConfig.html",[265,2.181,438,0.757]],["body/interfaces/ISMSConfig.html",[3,0.513,4,0.46,5,0.409,10,0.627,11,1.629,21,0.028,23,0.771,41,0.513,66,0.023,67,0.023,229,1.729,265,3.453,377,5.048,379,5.048,381,5.048,400,1.308,401,1.643,438,0.962,439,1.777,461,3.557]],["title/interfaces/ISendGridConfig.html",[263,2.181,438,0.757]],["body/interfaces/ISendGridConfig.html",[3,0.494,4,0.443,5,0.393,10,0.603,11,1.59,21,0.028,23,0.796,41,0.494,66,0.023,67,0.023,229,1.75,263,3.371,357,4.979,359,4.979,361,4.979,363,4.979,400,1.259,401,1.582,438,0.926,439,1.71,462,3.424]],["title/interfaces/IUploadFileConfig.html",[267,2.181,438,0.757]],["body/interfaces/IUploadFileConfig.html",[3,0.474,4,0.425,5,0.378,10,0.579,11,1.549,21,0.028,23,0.811,41,0.474,66,0.022,67,0.022,229,1.74,234,3.276,267,3.285,383,4.905,385,4.905,387,4.905,389,4.905,391,4.905,400,1.209,401,1.518,438,0.889,439,1.642,463,3.287,464,3.287]],["title/classes/PrismaClientExceptionFilter.html",[0,0.209,465,2.181]],["body/classes/PrismaClientExceptionFilter.html",[0,0.181,2,0.961,3,0.35,4,0.313,5,0.278,10,0.427,14,1.468,15,1.989,18,0.891,20,0.891,21,0.03,22,0.826,23,0.388,24,0.891,26,2.556,27,2.473,28,2.933,30,1.556,31,1.037,32,1.426,33,1.476,35,1.708,36,0.826,37,1.556,39,2.556,40,1.426,41,0.35,44,2.132,45,2.202,46,2.202,47,2.202,49,2.779,53,1.89,54,2.417,55,1.89,56,1.211,57,2.118,60,3.05,64,1.12,65,2.118,66,0.018,67,0.018,181,1.708,396,1.89,425,2.118,434,2.118,437,2.118,465,2.675,466,3.431,467,3.982,468,2.888,469,4.088,470,1.89,471,1.89,472,2.424,473,2.888,474,2.888,475,2.888,476,2.424,477,2.888,478,2.424,479,2.424,480,4.088,481,3.431,482,2.424,483,2.888,484,2.888,485,2.888]],["title/injectables/PrismaService.html",[93,1.645,486,2.181]],["body/injectables/PrismaService.html",[0,0.22,3,0.284,4,0.254,5,0.226,8,1.262,10,0.346,14,1.26,15,0.982,16,1.911,18,1.621,20,1.083,21,0.03,22,1.004,23,0.471,24,1.083,31,1.797,32,1.156,33,1.337,36,0.67,41,0.425,44,1.26,49,1.89,56,0.982,66,0.015,67,0.015,84,4.529,92,1.533,93,2.077,101,2.763,122,2.123,165,0.982,179,1.966,186,1.262,213,1.718,215,2.296,229,1.116,396,2.296,399,1.718,408,1.966,470,3.564,471,1.533,486,2.296,487,2.343,488,1.966,489,4.208,490,3.509,491,4.208,492,4.673,493,5.254,494,5.254,495,2.343,496,3.509,497,4.673,498,2.343,499,5.447,500,2.343,501,3.509,502,2.343,503,3.509,504,1.718,505,2.343,506,2.343,507,2.343,508,2.343,509,2.343,510,3.509,511,2.343,512,2.343,513,1.718,514,4.208,515,2.343,516,2.343,517,2.343,518,2.343,519,3.509,520,2.343,521,1.385,522,2.343,523,3.509,524,1.966,525,2.343,526,1.966]],["title/classes/Query.html",[0,0.209,165,1.397]],["body/classes/Query.html",[0,0.208,2,1.105,3,0.402,4,0.36,5,0.32,10,0.491,14,1.616,15,1.391,18,1.024,20,1.024,21,0.03,22,1.462,23,0.685,24,1.024,31,1.192,41,0.402,44,1.192,64,1.745,66,0.02,67,0.02,68,1.887,101,3.02,165,1.887,186,1.788,229,1.651,424,3.342,513,3.746,527,2.785,528,4.287,529,4.501,530,4.596,531,4.596,532,3.319,533,3.778,534,3.778,535,2.785,536,3.778,537,3.778,538,2.785,539,2.785,540,3.778,541,2.785,542,2.785,543,2.785,544,2.785,545,2.785]],["title/classes/Query-1.html",[0,0.175,165,1.174,521,1.656]],["body/classes/Query-1.html",[0,0.209,2,1.108,3,0.403,4,0.361,5,0.321,10,0.493,14,1.62,15,1.396,18,1.028,20,1.028,21,0.03,22,1.464,23,0.687,24,1.028,31,1.196,41,0.403,44,1.196,64,1.749,66,0.02,67,0.02,68,1.891,101,3.025,165,1.891,186,1.794,229,1.652,424,3.348,513,3.752,528,2.795,530,4.603,531,4.603,533,3.786,534,3.786,535,2.795,536,3.786,537,3.786,538,2.795,539,2.795,540,3.786,541,2.795,542,2.795,543,2.795,544,2.795,545,2.795,546,2.795,547,4.512,548,4.512,549,3.33]],["title/classes/QueryFailedFilter.html",[0,0.209,550,2.445]],["body/classes/QueryFailedFilter.html",[0,0.194,2,0.66,3,0.24,4,0.215,5,0.191,8,2.044,9,3.037,10,0.293,11,0.953,12,1.664,13,4.004,14,1.109,15,1.947,16,0.9,17,1.454,18,1.171,20,0.953,21,0.03,22,0.884,23,0.509,24,0.953,26,2.044,27,1.946,28,2.65,30,1.068,31,0.712,32,0.978,33,1.653,34,1.297,35,1.826,36,0.884,37,1.068,38,0.978,39,2.308,40,1.525,41,0.374,42,1.454,44,2.102,45,1.664,46,1.664,47,1.664,48,1.172,49,2.308,52,2.265,53,1.297,54,1.826,56,1.295,59,2.243,60,2.746,64,1.198,66,0.014,67,0.014,158,1.664,159,1.664,161,1.454,162,1.454,163,2.592,164,1.664,165,1.947,186,1.068,188,1.454,189,2.265,190,1.664,191,2.265,195,2.783,421,1.664,425,1.454,428,2.592,429,2.592,437,2.265,465,1.297,467,1.664,470,2.021,471,1.297,472,1.664,476,1.664,478,1.664,479,1.664,550,2.265,551,3.596,552,1.664,553,1.982,554,1.982,555,1.982,556,1.982,557,1.982,558,1.454,559,3.089,560,3.089,561,1.982,562,3.089,563,1.982,564,1.982,565,1.982,566,1.982,567,1.982,568,1.982,569,1.982,570,1.982,571,1.982,572,1.982,573,1.982,574,1.982]],["title/classes/UserNotFoundException.html",[0,0.209,575,2.445]],["body/classes/UserNotFoundException.html",[0,0.266,2,1.411,3,0.513,4,0.46,5,0.409,16,1.925,18,1.308,20,1.308,21,0.029,22,1.213,23,0.569,24,1.308,33,1.213,36,1.213,41,0.513,64,2.046,66,0.023,67,0.023,229,1.524,396,3.453,399,3.108,400,1.308,401,1.643,575,3.87,576,4.429,577,3.557,578,5.747,579,5.277,580,4.238,581,4.238]],["title/changelog.html",[582,1.656,583,1.656,584,2.351]],["body/changelog.html",[21,0.025,66,0.025,67,0.025,105,2.585,584,4.027,585,4.799,586,4.776,587,4.799,588,4.799,589,4.799,590,4.027,591,4.799,592,4.799,593,4.027,594,4.799,595,4.027,596,4.799,597,4.799]],["title/contributing.html",[582,1.656,583,1.656,598,2.351]],["body/contributing.html",[21,0.027,22,1.437,38,2.172,56,1.346,66,0.019,67,0.019,181,3.193,400,0.991,521,1.898,590,3.693,598,3.693,599,3.693,600,3.21,601,4.4,602,4.213,603,3.693,604,4.4,605,4.4,606,3.21,607,4.533,608,3.21,609,3.693,610,3.21,611,3.21,612,3.21,613,3.21,614,3.21,615,2.694,616,3.21,617,3.21,618,4.213,619,4.213,620,2.694,621,3.21,622,3.21,623,3.21,624,3.21,625,2.694,626,4.749,627,2.694,628,3.21,629,3.21,630,3.21,631,2.694,632,2.694,633,4.4,634,4.213,635,3.21,636,3.21,637,2.354,638,3.21,639,4.4,640,3.21,641,4.4,642,3.21,643,3.21,644,3.21,645,4.4,646,3.21,647,3.21,648,4.4,649,4.4,650,3.21,651,3.21,652,3.21,653,3.21,654,3.21,655,2.694,656,4.213,657,3.21,658,3.21,659,3.21,660,2.694,661,3.21,662,2.694,663,2.694]],["title/coverage.html",[664,3.311]],["body/coverage.html",[0,0.378,1,1.875,5,0.246,6,2.146,7,2.146,21,0.029,23,0.343,56,1.072,66,0.016,67,0.016,73,1.673,77,1.377,80,1.673,81,1.673,83,2.146,93,1.262,95,1.875,108,1.377,122,1.161,146,1.875,147,2.146,148,2.146,165,1.57,210,5.514,212,2.146,254,1.673,256,1.673,258,1.673,261,1.673,263,1.673,265,1.673,267,1.673,393,1.875,394,2.146,395,2.146,407,1.875,418,2.146,419,2.146,432,1.875,433,2.146,434,2.746,438,1.304,440,2.146,441,1.875,442,2.146,449,2.146,450,2.146,451,2.146,452,2.146,461,2.146,462,2.146,463,2.146,464,2.146,465,1.673,466,2.146,486,1.673,488,2.146,504,3.249,527,2.146,546,2.146,550,1.875,551,2.146,552,2.146,558,1.875,575,1.875,576,2.146,577,2.146,595,2.146,664,1.875,665,1.875,666,2.557,667,2.557,668,5.746,669,5.424,670,5.746,671,2.557,672,2.557,673,2.557,674,3.718,675,2.146,676,2.146,677,2.146,678,2.146,679,4.43,680,3.744,681,2.146,682,2.146,683,2.557,684,4.43,685,2.557,686,2.557,687,2.146,688,2.146,689,2.146,690,2.557,691,2.557]],["title/dependencies.html",[105,2.154,692,2.351]],["body/dependencies.html",[0,0.32,21,0.03,36,1.153,37,2.17,40,2.772,66,0.022,67,0.022,92,2.636,105,2.17,123,3.381,160,3.381,471,2.636,693,5.615,694,4.029,695,4.029,696,4.029,697,5.112,698,4.029,699,4.029,700,4.029,701,4.029,702,4.029,703,4.029,704,4.029,705,4.029,706,4.029,707,4.029,708,4.029,709,4.029,710,4.029,711,4.029,712,4.029,713,4.029,714,4.029,715,4.029,716,4.029]],["title/miscellaneous/functions.html",[717,1.833,718,3.357]],["body/miscellaneous/functions.html",[10,0.683,20,1.425,21,0.026,22,1.321,23,0.62,24,1.425,66,0.024,67,0.024,108,3.215,504,4.079,687,3.875,688,3.875,689,5.009,717,3.021,718,3.875,719,4.618,720,4.618,721,4.618,722,5.562,723,4.618]],["title/index.html",[10,0.414,582,1.656,583,1.656]],["body/index.html",[4,0.228,5,0.426,21,0.029,63,1.372,66,0.014,67,0.014,108,1.129,141,1.76,177,1.76,181,1.907,215,2.111,272,2.708,276,3.3,280,2.366,292,3.3,296,2.708,309,4,400,0.647,470,1.372,521,1.24,524,2.708,526,1.76,582,1.24,583,1.24,599,1.76,602,2.708,603,4.841,607,1.76,609,1.76,618,2.708,619,1.76,620,1.76,625,1.76,626,3.3,632,3.3,634,1.76,637,1.538,655,1.76,656,2.708,660,4.224,662,4.757,663,2.708,664,1.538,665,2.366,724,4.415,725,3.3,726,2.097,727,2.097,728,2.097,729,2.097,730,2.097,731,1.76,732,2.097,733,2.097,734,2.097,735,2.097,736,2.097,737,5.552,738,2.097,739,2.097,740,3.226,741,2.097,742,1.76,743,1.76,744,1.76,745,2.097,746,2.097,747,2.097,748,2.097,749,2.097,750,2.097,751,2.097,752,2.097,753,2.097,754,2.097,755,2.097,756,2.097,757,2.097,758,2.097,759,2.097,760,2.097,761,2.097,762,2.097,763,3.932,764,2.097,765,2.097,766,2.097,767,2.097,768,2.097,769,2.097,770,3.932,771,3.226,772,3.226,773,3.226,774,2.097,775,2.097,776,2.097,777,2.097,778,2.097,779,2.097,780,2.097,781,3.932,782,2.097,783,2.097,784,2.097,785,2.097,786,2.097,787,2.097,788,3.932,789,2.097,790,2.097,791,2.097,792,4.415,793,2.097,794,3.226,795,3.226,796,3.226,797,2.097,798,2.097,799,2.097,800,2.097,801,3.226,802,3.226,803,2.097,804,2.097,805,2.097,806,2.097,807,3.226,808,2.097,809,3.932,810,3.226,811,2.097,812,2.097,813,3.932,814,2.097,815,2.097,816,2.097,817,2.097,818,2.708,819,2.366,820,3.226,821,2.097,822,2.097,823,2.097,824,2.097,825,2.097,826,2.097,827,2.097,828,2.097,829,2.097,830,1.372,831,1.76,832,1.538,833,1.538,834,2.097,835,2.097]],["title/license.html",[582,1.656,583,1.656,830,1.833]],["body/license.html",[21,0.02,40,1.72,66,0.02,67,0.02,115,2.28,400,1.435,586,2.924,665,2.555,731,2.924,819,2.555,830,2.28,832,2.555,833,2.555,836,5.235,837,3.484,838,4.651,839,3.484,840,3.484,841,3.484,842,3.484,843,3.484,844,3.484,845,4.651,846,6.288,847,3.484,848,3.484,849,3.484,850,5.235,851,3.484,852,4.651,853,3.484,854,3.484,855,3.484,856,3.484,857,3.484,858,3.484,859,3.484,860,3.484,861,3.484,862,4.651,863,3.484,864,3.484,865,3.484,866,3.484,867,3.484,868,3.484,869,4.651,870,4.651,871,3.484,872,3.484,873,3.484,874,3.484,875,3.484,876,3.484,877,3.484,878,3.484,879,3.484,880,3.484,881,3.484,882,3.484,883,3.484,884,3.484,885,3.484,886,3.484,887,3.484,888,3.484,889,3.484,890,3.484,891,3.484,892,3.484,893,3.484,894,3.484,895,3.484,896,3.484,897,3.484,898,3.484,899,3.484]],["title/modules.html",[70,2.432]],["body/modules.html",[21,0.025,66,0.025,67,0.025,69,2.851,70,2.597,104,3.155,112,2.851,280,4.186,900,4.822,901,4.822,902,6.08,903,5.708,904,5.708]],["title/overview.html",[905,3.789]],["body/overview.html",[2,1.319,21,0.028,66,0.022,67,0.022,68,1.662,69,3.294,70,2.135,77,2.135,80,2.593,93,3.111,104,4.058,105,2.135,106,2.907,107,2.907,108,2.135,109,2.907,110,3.327,111,3.327,112,3.727,113,3.71,114,2.907,115,2.593,122,2.666,404,3.327,405,3.327,406,3.327,439,1.662,486,2.593,521,2.991,637,2.907,905,3.327,906,3.964,907,3.964]],["title/properties.html",[11,1.234,692,2.351]],["body/properties.html",[11,1.355,21,0.029,66,0.024,67,0.024,97,3.684,167,4.9,213,3.22,300,3.684,593,3.684,615,3.684,631,4.527,725,3.684,742,4.527,743,4.9,744,3.684,818,3.684,819,3.22,830,2.872,831,3.684,832,3.22,833,3.22,908,4.39,909,4.39,910,4.39,911,4.39]],["title/miscellaneous/variables.html",[717,1.833,912,3.357]],["body/miscellaneous/variables.html",[10,0.43,12,1.565,21,0.029,23,0.76,38,1.434,62,2.131,63,1.901,64,1.126,66,0.018,67,0.018,77,2.211,93,1.434,95,3.011,122,1.32,182,3.445,215,1.901,229,1.088,314,2.438,407,2.131,424,1.901,481,4.754,482,2.438,558,3.011,627,2.438,674,2.438,675,3.445,676,3.445,677,3.445,678,2.438,681,2.438,682,3.445,717,1.901,912,2.438,913,2.905,914,4.76,915,2.905,916,2.905,917,2.905,918,5.664,919,2.905,920,2.905,921,2.905,922,2.905,923,2.905,924,2.905,925,2.905,926,2.905,927,2.905,928,2.905,929,2.905,930,2.905,931,2.905,932,2.905,933,2.905,934,2.905,935,2.905,936,2.905,937,2.905,938,2.905,939,2.905,940,2.905,941,2.905,942,2.905,943,2.905,944,4.105,945,2.905,946,2.905,947,2.905,948,4.105,949,2.905,950,2.905,951,2.905,952,2.905,953,2.905,954,2.905,955,2.905,956,2.905,957,2.905,958,2.905,959,2.905,960,2.905,961,2.905,962,4.105,963,2.905,964,2.905,965,2.905,966,2.905,967,2.905,968,2.905,969,2.905,970,2.905,971,2.905,972,2.905,973,2.905,974,2.905,975,2.905,976,4.105,977,2.905,978,2.905,979,2.905,980,2.905,981,2.905,982,2.905,983,2.905]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/ApiModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/ConfigService.html":{},"classes/FileNotImageException.html":{},"modules/HelperModule.html":{},"classes/HttpErrorFilter.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAwsConfig.html":{},"interfaces/IFile.html":{},"interfaces/IJWTConfig.html":{},"interfaces/INodeEmailerConfig.html":{},"interfaces/IPostgreSQLConfig.html":{},"interfaces/ISMSConfig.html":{},"interfaces/ISendGridConfig.html":{},"interfaces/IUploadFileConfig.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/Query.html":{},"classes/Query-1.html":{},"classes/QueryFailedFilter.html":{},"classes/UserNotFoundException.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":210,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{},"coverage.html":{}}}],["0.14.1",{"_index":702,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":714,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":701,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":670,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":683,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":668,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":679,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":680,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":686,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":684,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":685,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":588,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":594,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":587,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":521,"title":{"classes/Query-1.html":{}},"body":{"injectables/PrismaService.html":{},"contributing.html":{},"index.html":{},"overview.html":{}}}],["1.0.0",{"_index":593,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["1.0.1",{"_index":585,"title":{},"body":{"changelog.html":{}}}],["1.7.4",{"_index":704,"title":{},"body":{"dependencies.html":{}}}],["1/4",{"_index":671,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":673,"title":{},"body":{"coverage.html":{}}}],["10.2.3",{"_index":698,"title":{},"body":{"dependencies.html":{}}}],["10.3.9",{"_index":693,"title":{},"body":{"dependencies.html":{}}}],["11",{"_index":906,"title":{},"body":{"overview.html":{}}}],["14",{"_index":672,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":599,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["20",{"_index":734,"title":{},"body":{"index.html":{}}}],["200",{"_index":922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["201",{"_index":924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["202",{"_index":926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2024",{"_index":586,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["203",{"_index":928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["204",{"_index":930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["205",{"_index":932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["206",{"_index":934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25",{"_index":595,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["3",{"_index":637,"title":{},"body":{"contributing.html":{},"index.html":{},"overview.html":{}}}],["3.2.2",{"_index":694,"title":{},"body":{"dependencies.html":{}}}],["301",{"_index":936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["302",{"_index":939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["304",{"_index":940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["307",{"_index":942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["308",{"_index":945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":640,"title":{},"body":{"contributing.html":{}}}],["4.19.2",{"_index":705,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["401",{"_index":949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["403",{"_index":951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["404",{"_index":953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["405",{"_index":954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["406",{"_index":956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["409",{"_index":958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["413",{"_index":960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["414",{"_index":963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["415",{"_index":965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["422",{"_index":968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["429",{"_index":971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":644,"title":{},"body":{"contributing.html":{}}}],["5.16.0",{"_index":699,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":482,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["501",{"_index":973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["502",{"_index":975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["503",{"_index":977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["504",{"_index":979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":647,"title":{},"body":{"contributing.html":{}}}],["7.1.0",{"_index":709,"title":{},"body":{"dependencies.html":{}}}],["7.3.1",{"_index":697,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":716,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":907,"title":{},"body":{"overview.html":{}}}],["8.12.0",{"_index":711,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":161,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{},"classes/HttpErrorFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["_.clone(errorresponse",{"_index":430,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["_.clone(r",{"_index":204,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{}}}],["_.clone(request.body",{"_index":198,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{},"classes/HttpErrorFilter.html":{}}}],["_.clone(request.header",{"_index":200,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{},"classes/HttpErrorFilter.html":{}}}],["_.isarray(r.message",{"_index":169,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{}}}],["_validationfilter",{"_index":149,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{}}}],["_validationfilter(validationerrors",{"_index":152,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{}}}],["above",{"_index":868,"title":{},"body":{"license.html":{}}}],["acceptable",{"_index":957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accepted",{"_index":927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accessors",{"_index":217,"title":{},"body":{"classes/ConfigService.html":{}}}],["action",{"_index":893,"title":{},"body":{"license.html":{}}}],["actions",{"_index":503,"title":{},"body":{"injectables/PrismaService.html":{}}}],["add",{"_index":643,"title":{},"body":{"contributing.html":{}}}],["addhttpqueryerror",{"_index":547,"title":{},"body":{"classes/Query-1.html":{}}}],["addhttpqueryerror(module",{"_index":548,"title":{},"body":{"classes/Query-1.html":{}}}],["addqueryerror",{"_index":528,"title":{},"body":{"classes/Query.html":{},"classes/Query-1.html":{}}}],["addqueryerror(module",{"_index":529,"title":{},"body":{"classes/Query.html":{}}}],["adhere",{"_index":650,"title":{},"body":{"contributing.html":{}}}],["admin",{"_index":312,"title":{},"body":{"classes/ConfigService.html":{}}}],["aims",{"_index":728,"title":{},"body":{"index.html":{}}}],["algorithm",{"_index":347,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/IJWTConfig.html":{}}}],["allexceptionsfilter",{"_index":1,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["allowed",{"_index":955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["amazing",{"_index":824,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":860,"title":{},"body":{"license.html":{}}}],["any).message",{"_index":61,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["api",{"_index":175,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{}}}],["api.module",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["api_key",{"_index":379,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/ISMSConfig.html":{}}}],["apimodule",{"_index":69,"title":{"modules/ApiModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["app",{"_index":723,"title":{},"body":{"miscellaneous/functions.html":{}}}],["app.controller",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["app_filter",{"_index":72,"title":{},"body":{"modules/ApiModule.html":{}}}],["appcontroller",{"_index":81,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applicable",{"_index":738,"title":{},"body":{"index.html":{}}}],["apply",{"_index":815,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":104,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["argumentshost",{"_index":28,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/HttpErrorFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["arising",{"_index":897,"title":{},"body":{"license.html":{}}}],["associated",{"_index":847,"title":{},"body":{"license.html":{}}}],["async",{"_index":84,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/PrismaService.html":{}}}],["audience",{"_index":351,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/IJWTConfig.html":{}}}],["author",{"_index":831,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authors",{"_index":886,"title":{},"body":{"license.html":{}}}],["authsource",{"_index":311,"title":{},"body":{"classes/ConfigService.html":{}}}],["available",{"_index":901,"title":{},"body":{"modules.html":{}}}],["await",{"_index":514,"title":{},"body":{"injectables/PrismaService.html":{}}}],["aws",{"_index":283,"title":{},"body":{"classes/ConfigService.html":{}}}],["aws_s3_access_key_id",{"_index":321,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/IAwsConfig.html":{}}}],["aws_s3_bucket_name",{"_index":325,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/IAwsConfig.html":{}}}],["aws_s3_companion_secret",{"_index":335,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/IAwsConfig.html":{}}}],["aws_s3_default_region",{"_index":327,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/IAwsConfig.html":{}}}],["aws_s3_endpoint",{"_index":331,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/IAwsConfig.html":{}}}],["aws_s3_secret_access_key",{"_index":323,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/IAwsConfig.html":{}}}],["aws_s3_server_host",{"_index":333,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/IAwsConfig.html":{}}}],["aws_s3_temp_directory",{"_index":329,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/IAwsConfig.html":{}}}],["awss3config",{"_index":220,"title":{},"body":{"classes/ConfigService.html":{}}}],["b",{"_index":636,"title":{},"body":{"contributing.html":{}}}],["backers",{"_index":825,"title":{},"body":{"index.html":{}}}],["bad",{"_index":948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["badrequestexception",{"_index":156,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{},"classes/FileNotImageException.html":{}}}],["badrequestexceptionfilter",{"_index":146,"title":{"classes/BadRequestExceptionFilter.html":{}},"body":{"classes/BadRequestExceptionFilter.html":{},"coverage.html":{}}}],["baeumer",{"_index":752,"title":{},"body":{"index.html":{}}}],["baseexceptionfilter",{"_index":469,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["bash",{"_index":796,"title":{},"body":{"index.html":{}}}],["before",{"_index":658,"title":{},"body":{"contributing.html":{}}}],["bignumberstrings",{"_index":318,"title":{},"body":{"classes/ConfigService.html":{}}}],["body",{"_index":197,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{},"classes/HttpErrorFilter.html":{}}}],["boilerplate",{"_index":726,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"modules/HelperModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"overview.html":{}}}],["branch",{"_index":633,"title":{},"body":{"contributing.html":{}}}],["break",{"_index":480,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["browse",{"_index":902,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":903,"title":{},"body":{"modules.html":{}}}],["buffer",{"_index":443,"title":{},"body":{"interfaces/IFile.html":{}}}],["bug",{"_index":617,"title":{},"body":{"contributing.html":{}}}],["bugs",{"_index":615,"title":{},"body":{"contributing.html":{},"properties.html":{}}}],["buildrun",{"_index":803,"title":{},"body":{"index.html":{}}}],["buildtests",{"_index":783,"title":{},"body":{"index.html":{}}}],["bullmodule",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["bullmodule.forrootasync",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["c",{"_index":837,"title":{},"body":{"license.html":{}}}],["case",{"_index":477,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["catch",{"_index":15,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/HttpErrorFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/Query.html":{},"classes/Query-1.html":{},"classes/QueryFailedFilter.html":{}}}],["catch(badrequestexception",{"_index":166,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{}}}],["catch(exception",{"_index":26,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/HttpErrorFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["catch(httpexception",{"_index":436,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(prisma.prismaclientknownrequesterror",{"_index":472,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["catch(queryfailederror",{"_index":561,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["cd",{"_index":745,"title":{},"body":{"index.html":{}}}],["change",{"_index":789,"title":{},"body":{"index.html":{}}}],["changelog",{"_index":584,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":639,"title":{},"body":{"contributing.html":{}}}],["charge",{"_index":842,"title":{},"body":{"license.html":{}}}],["checkout",{"_index":635,"title":{},"body":{"contributing.html":{}}}],["choose",{"_index":778,"title":{},"body":{"index.html":{}}}],["claim",{"_index":889,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/AllExceptionsFilter.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/ConfigService.html":{},"classes/FileNotImageException.html":{},"classes/HttpErrorFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/Query.html":{},"classes/Query-1.html":{},"classes/QueryFailedFilter.html":{},"classes/UserNotFoundException.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"modules/ApiModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/ConfigService.html":{},"classes/FileNotImageException.html":{},"modules/HelperModule.html":{},"classes/HttpErrorFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/Query.html":{},"classes/Query-1.html":{},"classes/QueryFailedFilter.html":{},"classes/UserNotFoundException.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/ConfigService.html":{},"classes/FileNotImageException.html":{},"classes/HttpErrorFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/Query.html":{},"classes/Query-1.html":{},"classes/QueryFailedFilter.html":{},"classes/UserNotFoundException.html":{},"overview.html":{}}}],["clone",{"_index":740,"title":{},"body":{"index.html":{}}}],["cluster",{"_index":817,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_helpermodule",{"_index":404,"title":{},"body":{"modules/HelperModule.html":{},"overview.html":{}}}],["cluster_helpermodule_exports",{"_index":406,"title":{},"body":{"modules/HelperModule.html":{},"overview.html":{}}}],["cluster_helpermodule_providers",{"_index":405,"title":{},"body":{"modules/HelperModule.html":{},"overview.html":{}}}],["code",{"_index":181,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{},"classes/HttpErrorFilter.html":{},"classes/PrismaClientExceptionFilter.html":{},"contributing.html":{},"index.html":{}}}],["command",{"_index":770,"title":{},"body":{"index.html":{}}}],["commit",{"_index":641,"title":{},"body":{"contributing.html":{}}}],["common/helper/helper.module",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["common/helper/services/config.service",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["common/helper/services/prisma.service",{"_index":94,"title":{},"body":{"controllers/AppController.html":{}}}],["common/shared/services/pgsql.service",{"_index":164,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["commonmodule",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["community",{"_index":606,"title":{},"body":{"contributing.html":{}}}],["compose",{"_index":802,"title":{},"body":{"index.html":{}}}],["compression",{"_index":703,"title":{},"body":{"dependencies.html":{}}}],["conditions",{"_index":867,"title":{},"body":{"license.html":{}}}],["config",{"_index":214,"title":{},"body":{"classes/ConfigService.html":{}}}],["configmodule",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":122,"title":{"classes/ConfigService.html":{}},"body":{"modules/AppModule.html":{},"classes/ConfigService.html":{},"modules/HelperModule.html":{},"injectables/PrismaService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["configservice.get('redis.host",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.prismaconfig",{"_index":510,"title":{},"body":{"injectables/PrismaService.html":{}}}],["configuration",{"_index":591,"title":{},"body":{"changelog.html":{}}}],["conflict",{"_index":959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection",{"_index":898,"title":{},"body":{"license.html":{}}}],["console.error(exception.message",{"_index":473,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["console.log",{"_index":509,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log('resultttttttttttttttttttt",{"_index":522,"title":{},"body":{"injectables/PrismaService.html":{}}}],["const",{"_index":44,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/ConfigService.html":{},"modules/HelperModule.html":{},"classes/HttpErrorFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/Query.html":{},"classes/Query-1.html":{},"classes/QueryFailedFilter.html":{}}}],["constraint",{"_index":559,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["constrainterrors",{"_index":558,"title":{},"body":{"classes/QueryFailedFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["constrainterrors[exception.constraint",{"_index":563,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["constructor",{"_index":16,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/ConfigService.html":{},"classes/FileNotImageException.html":{},"injectables/PrismaService.html":{},"classes/QueryFailedFilter.html":{},"classes/UserNotFoundException.html":{}}}],["constructor(error",{"_index":579,"title":{},"body":{"classes/UserNotFoundException.html":{}}}],["constructor(message",{"_index":397,"title":{},"body":{"classes/FileNotImageException.html":{}}}],["constructor(public",{"_index":42,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["constructor(reflector",{"_index":17,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["container",{"_index":792,"title":{},"body":{"index.html":{}}}],["contract",{"_index":894,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":613,"title":{},"body":{"contributing.html":{}}}],["contributing",{"_index":598,"title":{"contributing.html":{}},"body":{"contributing.html":{}}}],["contributing.md",{"_index":600,"title":{},"body":{"contributing.html":{}}}],["contributions",{"_index":605,"title":{},"body":{"contributing.html":{}}}],["control",{"_index":775,"title":{},"body":{"index.html":{}}}],["controller",{"_index":80,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"coverage.html":{},"overview.html":{}}}],["controllers",{"_index":82,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/HelperModule.html":{}}}],["copies",{"_index":862,"title":{},"body":{"license.html":{}}}],["copy",{"_index":845,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":836,"title":{},"body":{"license.html":{}}}],["core/exceptions/http",{"_index":74,"title":{},"body":{"modules/ApiModule.html":{}}}],["core/interfaces/aws.interfaces",{"_index":255,"title":{},"body":{"classes/ConfigService.html":{}}}],["core/interfaces/jwt.interfaces",{"_index":257,"title":{},"body":{"classes/ConfigService.html":{}}}],["core/interfaces/node",{"_index":259,"title":{},"body":{"classes/ConfigService.html":{}}}],["core/interfaces/postgres.interfaces",{"_index":262,"title":{},"body":{"classes/ConfigService.html":{}}}],["core/interfaces/sendgrid.interfaces",{"_index":264,"title":{},"body":{"classes/ConfigService.html":{}}}],["core/interfaces/sms.interfaces",{"_index":266,"title":{},"body":{"classes/ConfigService.html":{}}}],["core/interfaces/upload",{"_index":268,"title":{},"body":{"classes/ConfigService.html":{}}}],["coremodule",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["coverage",{"_index":664,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":632,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["created",{"_index":925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx",{"_index":45,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/HttpErrorFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["ctx.getrequest",{"_index":48,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/HttpErrorFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["ctx.getresponse",{"_index":47,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/HttpErrorFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["customdecorator",{"_index":982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damages",{"_index":890,"title":{},"body":{"license.html":{}}}],["data",{"_index":535,"title":{},"body":{"classes/Query.html":{},"classes/Query-1.html":{}}}],["database",{"_index":309,"title":{},"body":{"classes/ConfigService.html":{},"index.html":{}}}],["datasources",{"_index":512,"title":{},"body":{"injectables/PrismaService.html":{}}}],["date().toisostring",{"_index":57,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["date().tolocaletimestring",{"_index":423,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["db",{"_index":179,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{},"injectables/PrismaService.html":{}}}],["dbaeumer.vscode",{"_index":750,"title":{},"body":{"index.html":{}}}],["dbconfig",{"_index":295,"title":{},"body":{"classes/ConfigService.html":{}}}],["deal",{"_index":849,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":899,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/HelperModule.html":{},"overview.html":{}}}],["decorators",{"_index":86,"title":{},"body":{"controllers/AppController.html":{}}}],["default",{"_index":481,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":18,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/ConfigService.html":{},"classes/FileNotImageException.html":{},"classes/HttpErrorFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/Query.html":{},"classes/Query-1.html":{},"classes/QueryFailedFilter.html":{},"classes/UserNotFoundException.html":{}}}],["dependencies",{"_index":105,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/HelperModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["deployment",{"_index":810,"title":{},"body":{"index.html":{}}}],["describe",{"_index":628,"title":{},"body":{"contributing.html":{}}}],["description",{"_index":213,"title":{},"body":{"classes/ConfigService.html":{},"injectables/PrismaService.html":{},"properties.html":{}}}],["detail",{"_index":629,"title":{},"body":{"contributing.html":{}}}],["development",{"_index":292,"title":{},"body":{"classes/ConfigService.html":{},"index.html":{}}}],["dharmesh",{"_index":832,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["dirk",{"_index":751,"title":{},"body":{"index.html":{}}}],["disable",{"_index":297,"title":{},"body":{"classes/ConfigService.html":{}}}],["distribute",{"_index":858,"title":{},"body":{"license.html":{}}}],["docker",{"_index":737,"title":{},"body":{"index.html":{}}}],["dockfile",{"_index":761,"title":{},"body":{"index.html":{}}}],["docs",{"_index":808,"title":{},"body":{"index.html":{}}}],["document.installation",{"_index":779,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":665,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["dotenv",{"_index":253,"title":{},"body":{"classes/ConfigService.html":{}}}],["dotenv.config",{"_index":271,"title":{},"body":{"classes/ConfigService.html":{}}}],["down",{"_index":526,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["e",{"_index":525,"title":{},"body":{"injectables/PrismaService.html":{}}}],["e2e",{"_index":785,"title":{},"body":{"index.html":{}}}],["emailer.interfaces",{"_index":260,"title":{},"body":{"classes/ConfigService.html":{}}}],["emailer.interfaces.ts",{"_index":451,"title":{},"body":{"interfaces/INodeEmailerConfig.html":{},"coverage.html":{}}}],["encoding",{"_index":444,"title":{},"body":{"interfaces/IFile.html":{}}}],["encryptionservice",{"_index":414,"title":{},"body":{"modules/HelperModule.html":{}}}],["endpoint",{"_index":807,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":609,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["entities",{"_index":316,"title":{},"body":{"classes/ConfigService.html":{}}}],["entity",{"_index":970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env",{"_index":273,"title":{},"body":{"classes/ConfigService.html":{}}}],["env.${nodeenv",{"_index":274,"title":{},"body":{"classes/ConfigService.html":{}}}],["env.development",{"_index":277,"title":{},"body":{"classes/ConfigService.html":{}}}],["env.staging",{"_index":275,"title":{},"body":{"classes/ConfigService.html":{}}}],["envname",{"_index":284,"title":{},"body":{"classes/ConfigService.html":{}}}],["erro",{"_index":180,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{}}}],["error",{"_index":64,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/FileNotImageException.html":{},"classes/HttpErrorFilter.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/Query.html":{},"classes/Query-1.html":{},"classes/QueryFailedFilter.html":{},"classes/UserNotFoundException.html":{},"miscellaneous/variables.html":{}}}],["error.filter",{"_index":75,"title":{},"body":{"modules/ApiModule.html":{}}}],["error.filter.ts",{"_index":419,"title":{},"body":{"classes/HttpErrorFilter.html":{},"coverage.html":{}}}],["error.filter.ts:18",{"_index":420,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["error.unique.email",{"_index":920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errormessage",{"_index":562,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["errormessages",{"_index":207,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{}}}],["errorresponse",{"_index":53,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpErrorFilter.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["errors",{"_index":560,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["errors.ts",{"_index":682,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["esben",{"_index":757,"title":{},"body":{"index.html":{}}}],["esbenp.prettier",{"_index":755,"title":{},"body":{"index.html":{}}}],["eslint",{"_index":296,"title":{},"body":{"classes/ConfigService.html":{},"index.html":{}}}],["eslint/prefer",{"_index":301,"title":{},"body":{"classes/ConfigService.html":{}}}],["event",{"_index":885,"title":{},"body":{"license.html":{}}}],["everyone",{"_index":612,"title":{},"body":{"contributing.html":{}}}],["example",{"_index":603,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["exception",{"_index":30,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/HttpErrorFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["exception.code",{"_index":476,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["exception.constraint",{"_index":564,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["exception.constraint.startswith('uq",{"_index":565,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["exception.filter.ts",{"_index":434,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:7",{"_index":435,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.filter.ts:9",{"_index":468,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["exception.getresponse",{"_index":168,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{}}}],["exception.getstatus",{"_index":51,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/HttpErrorFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["exception.message",{"_index":425,"title":{},"body":{"classes/HttpErrorFilter.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["exception.message.replace(/\\n/g",{"_index":474,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["exception.query",{"_index":567,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["exception.sqlmessage",{"_index":566,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["exception.stack",{"_index":205,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{},"classes/HttpErrorFilter.html":{}}}],["exceptionfilter",{"_index":9,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/HttpErrorFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["exceptions.filter.ts",{"_index":7,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["exceptions.filter.ts:40",{"_index":19,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptions.filter.ts:41",{"_index":25,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptions.filter.ts:42",{"_index":29,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["executerawquery",{"_index":490,"title":{},"body":{"injectables/PrismaService.html":{}}}],["executerawquery(query",{"_index":496,"title":{},"body":{"injectables/PrismaService.html":{}}}],["executetransaction",{"_index":491,"title":{},"body":{"injectables/PrismaService.html":{}}}],["executetransaction(actions",{"_index":500,"title":{},"body":{"injectables/PrismaService.html":{}}}],["expirationtime",{"_index":355,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/IJWTConfig.html":{}}}],["expiresinseconds",{"_index":353,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/IJWTConfig.html":{}}}],["export",{"_index":41,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/ApiModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/ConfigService.html":{},"classes/FileNotImageException.html":{},"modules/HelperModule.html":{},"classes/HttpErrorFilter.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAwsConfig.html":{},"interfaces/IFile.html":{},"interfaces/IJWTConfig.html":{},"interfaces/INodeEmailerConfig.html":{},"interfaces/IPostgreSQLConfig.html":{},"interfaces/ISMSConfig.html":{},"interfaces/ISendGridConfig.html":{},"interfaces/IUploadFileConfig.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/Query.html":{},"classes/Query-1.html":{},"classes/QueryFailedFilter.html":{},"classes/UserNotFoundException.html":{}}}],["exports",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"modules/HelperModule.html":{},"overview.html":{}}}],["express",{"_index":40,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/QueryFailedFilter.html":{},"dependencies.html":{},"license.html":{}}}],["extends",{"_index":396,"title":{},"body":{"classes/FileNotImageException.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/UserNotFoundException.html":{}}}],["extensions",{"_index":749,"title":{},"body":{"index.html":{}}}],["f",{"_index":816,"title":{},"body":{"index.html":{}}}],["failed",{"_index":574,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["failed.filter.ts",{"_index":552,"title":{},"body":{"classes/QueryFailedFilter.html":{},"coverage.html":{}}}],["failed.filter.ts:15",{"_index":553,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["failed.filter.ts:16",{"_index":554,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["failed.filter.ts:18",{"_index":555,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["false",{"_index":319,"title":{},"body":{"classes/ConfigService.html":{}}}],["feature",{"_index":626,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["features",{"_index":625,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["fetch",{"_index":178,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{}}}],["fieldname",{"_index":445,"title":{},"body":{"interfaces/IFile.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/ApiModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/ConfigService.html":{},"classes/FileNotImageException.html":{},"modules/HelperModule.html":{},"classes/HttpErrorFilter.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAwsConfig.html":{},"interfaces/IFile.html":{},"interfaces/IJWTConfig.html":{},"interfaces/INodeEmailerConfig.html":{},"interfaces/IPostgreSQLConfig.html":{},"interfaces/ISMSConfig.html":{},"interfaces/ISendGridConfig.html":{},"interfaces/IUploadFileConfig.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/Query.html":{},"classes/Query-1.html":{},"classes/QueryFailedFilter.html":{},"classes/UserNotFoundException.html":{},"coverage.html":{},"index.html":{}}}],["file.interfaces",{"_index":269,"title":{},"body":{"classes/ConfigService.html":{}}}],["file.interfaces.ts",{"_index":464,"title":{},"body":{"interfaces/IUploadFileConfig.html":{},"coverage.html":{}}}],["file_upload_destination",{"_index":385,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/IUploadFileConfig.html":{}}}],["filenotimageexception",{"_index":393,"title":{"classes/FileNotImageException.html":{}},"body":{"classes/FileNotImageException.html":{},"coverage.html":{}}}],["files",{"_index":848,"title":{},"body":{"license.html":{}}}],["find",{"_index":616,"title":{},"body":{"contributing.html":{}}}],["first",{"_index":812,"title":{},"body":{"index.html":{}}}],["fitness",{"_index":881,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":589,"title":{},"body":{"changelog.html":{}}}],["follow",{"_index":608,"title":{},"body":{"contributing.html":{}}}],["following",{"_index":731,"title":{},"body":{"index.html":{},"license.html":{}}}],["forbidden",{"_index":952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fork",{"_index":630,"title":{},"body":{"contributing.html":{}}}],["format",{"_index":763,"title":{},"body":{"index.html":{}}}],["formatter",{"_index":754,"title":{},"body":{"index.html":{}}}],["formatting",{"_index":653,"title":{},"body":{"contributing.html":{}}}],["found",{"_index":182,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["found.exception.ts",{"_index":577,"title":{},"body":{"classes/UserNotFoundException.html":{},"coverage.html":{}}}],["found.exception.ts:5",{"_index":580,"title":{},"body":{"classes/UserNotFoundException.html":{}}}],["foxundermoon",{"_index":764,"title":{},"body":{"index.html":{}}}],["foxundermoon.shell",{"_index":762,"title":{},"body":{"index.html":{}}}],["free",{"_index":841,"title":{},"body":{"license.html":{}}}],["from_email",{"_index":359,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/ISendGridConfig.html":{}}}],["function",{"_index":504,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["function(app",{"_index":721,"title":{},"body":{"miscellaneous/functions.html":{}}}],["functions",{"_index":718,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":865,"title":{},"body":{"license.html":{}}}],["gateway",{"_index":976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('/health",{"_index":100,"title":{},"body":{"controllers/AppController.html":{}}}],["get('/health')@healthcheck",{"_index":87,"title":{},"body":{"controllers/AppController.html":{}}}],["get(key",{"_index":228,"title":{},"body":{"classes/ConfigService.html":{}}}],["getawss3config",{"_index":239,"title":{},"body":{"classes/ConfigService.html":{}}}],["gethealth",{"_index":85,"title":{},"body":{"controllers/AppController.html":{}}}],["getjwtconfig",{"_index":243,"title":{},"body":{"classes/ConfigService.html":{}}}],["getnodeemailerconfig",{"_index":247,"title":{},"body":{"classes/ConfigService.html":{}}}],["getnodeenv",{"_index":235,"title":{},"body":{"classes/ConfigService.html":{}}}],["getnumber",{"_index":216,"title":{},"body":{"classes/ConfigService.html":{}}}],["getnumber(key",{"_index":232,"title":{},"body":{"classes/ConfigService.html":{}}}],["getprismaconfig",{"_index":237,"title":{},"body":{"classes/ConfigService.html":{}}}],["getqrconfig",{"_index":241,"title":{},"body":{"classes/ConfigService.html":{}}}],["getsendgridconfig",{"_index":245,"title":{},"body":{"classes/ConfigService.html":{}}}],["getsmsconfig",{"_index":249,"title":{},"body":{"classes/ConfigService.html":{}}}],["getting",{"_index":582,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["getuploadfileconfig",{"_index":251,"title":{},"body":{"classes/ConfigService.html":{}}}],["git",{"_index":634,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["git+https://github.com/dharmesh",{"_index":911,"title":{},"body":{"properties.html":{}}}],["github",{"_index":619,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["global",{"_index":410,"title":{},"body":{"modules/HelperModule.html":{}}}],["granted",{"_index":840,"title":{},"body":{"license.html":{}}}],["graph",{"_index":900,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":821,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":601,"title":{},"body":{"contributing.html":{}}}],["handle",{"_index":571,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["header",{"_index":199,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{},"classes/HttpErrorFilter.html":{}}}],["healthcheck",{"_index":90,"title":{},"body":{"controllers/AppController.html":{}}}],["healthcheckservice",{"_index":91,"title":{},"body":{"controllers/AppController.html":{}}}],["healthindicatorresult",{"_index":508,"title":{},"body":{"injectables/PrismaService.html":{}}}],["helmet",{"_index":708,"title":{},"body":{"dependencies.html":{}}}],["helpermodule",{"_index":112,"title":{"modules/HelperModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HelperModule.html":{},"modules.html":{},"overview.html":{}}}],["here",{"_index":177,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{},"index.html":{}}}],["hereby",{"_index":839,"title":{},"body":{"license.html":{}}}],["holders",{"_index":887,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":908,"title":{},"body":{"properties.html":{}}}],["host",{"_index":27,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/ConfigService.html":{},"classes/HttpErrorFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["host.switchtohttp",{"_index":46,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/HttpErrorFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["http",{"_index":159,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["http_status_messages",{"_index":675,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["httperrorfilter",{"_index":73,"title":{"classes/HttpErrorFilter.html":{}},"body":{"modules/ApiModule.html":{},"classes/HttpErrorFilter.html":{},"coverage.html":{}}}],["httpexception",{"_index":34,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpErrorFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["httpexceptionfilter",{"_index":432,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["httpmodule",{"_index":411,"title":{},"body":{"modules/HelperModule.html":{}}}],["https://github.com/dharmesh",{"_index":742,"title":{},"body":{"index.html":{},"properties.html":{}}}],["httpstatus",{"_index":35,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/HttpErrorFilter.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["httpstatus.bad_request",{"_index":485,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["httpstatus.conflict",{"_index":479,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["httpstatus.internal_server_error",{"_index":52,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpErrorFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["iawsconfig",{"_index":254,"title":{"interfaces/IAwsConfig.html":{}},"body":{"classes/ConfigService.html":{},"interfaces/IAwsConfig.html":{},"coverage.html":{}}}],["identifier",{"_index":666,"title":{},"body":{"coverage.html":{}}}],["ifile",{"_index":441,"title":{"interfaces/IFile.html":{}},"body":{"interfaces/IFile.html":{},"coverage.html":{}}}],["ijwtconfig",{"_index":256,"title":{"interfaces/IJWTConfig.html":{}},"body":{"classes/ConfigService.html":{},"interfaces/IJWTConfig.html":{},"coverage.html":{}}}],["image.exception.ts",{"_index":395,"title":{},"body":{"classes/FileNotImageException.html":{},"coverage.html":{}}}],["image.exception.ts:5",{"_index":398,"title":{},"body":{"classes/FileNotImageException.html":{}}}],["implemented",{"_index":974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implements",{"_index":8,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/HttpErrorFilter.html":{},"classes/HttpExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/QueryFailedFilter.html":{}}}],["implied",{"_index":877,"title":{},"body":{"license.html":{}}}],["import",{"_index":33,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/ApiModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/ConfigService.html":{},"classes/FileNotImageException.html":{},"modules/HelperModule.html":{},"classes/HttpErrorFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/QueryFailedFilter.html":{},"classes/UserNotFoundException.html":{}}}],["imports",{"_index":76,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/HelperModule.html":{}}}],["include",{"_index":620,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["included",{"_index":871,"title":{},"body":{"license.html":{}}}],["including",{"_index":852,"title":{},"body":{"license.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/ConfigService.html":{},"classes/HttpErrorFilter.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAwsConfig.html":{},"interfaces/IFile.html":{},"interfaces/IJWTConfig.html":{},"interfaces/INodeEmailerConfig.html":{},"interfaces/IPostgreSQLConfig.html":{},"interfaces/ISMSConfig.html":{},"interfaces/ISendGridConfig.html":{},"interfaces/IUploadFileConfig.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/Query.html":{},"classes/Query-1.html":{},"classes/QueryFailedFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":722,"title":{},"body":{"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/ApiModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/ConfigService.html":{},"classes/FileNotImageException.html":{},"modules/HelperModule.html":{},"classes/HttpErrorFilter.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAwsConfig.html":{},"interfaces/IFile.html":{},"interfaces/IJWTConfig.html":{},"interfaces/INodeEmailerConfig.html":{},"interfaces/IPostgreSQLConfig.html":{},"interfaces/ISMSConfig.html":{},"interfaces/ISendGridConfig.html":{},"interfaces/IUploadFileConfig.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/Query.html":{},"classes/Query-1.html":{},"classes/QueryFailedFilter.html":{},"classes/UserNotFoundException.html":{}}}],["information",{"_index":622,"title":{},"body":{"contributing.html":{}}}],["initial",{"_index":596,"title":{},"body":{"changelog.html":{}}}],["inject",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":486,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/PrismaService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":487,"title":{},"body":{"injectables/PrismaService.html":{}}}],["inodeemailerconfig",{"_index":258,"title":{"interfaces/INodeEmailerConfig.html":{}},"body":{"classes/ConfigService.html":{},"interfaces/INodeEmailerConfig.html":{},"coverage.html":{}}}],["insert",{"_index":534,"title":{},"body":{"classes/Query.html":{},"classes/Query-1.html":{}}}],["instagram",{"_index":835,"title":{},"body":{"index.html":{}}}],["installation",{"_index":739,"title":{},"body":{"index.html":{}}}],["installed",{"_index":732,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":50,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BadRequestExceptionFilter.html":{}}}],["interface",{"_index":438,"title":{"interfaces/IAwsConfig.html":{},"interfaces/IFile.html":{},"interfaces/IJWTConfig.html":{},"interfaces/INodeEmailerConfig.html":{},"interfaces/IPostgreSQLConfig.html":{},"interfaces/ISMSConfig.html":{},"interfaces/ISendGridConfig.html":{},"interfaces/IUploadFileConfig.html":{}},"body":{"interfaces/IAwsConfig.html":{},"interfaces/IFile.html":{},"interfaces/IJWTConfig.html":{},"interfaces/INodeEmailerConfig.html":{},"interfaces/IPostgreSQLConfig.html":{},"interfaces/ISMSConfig.html":{},"interfaces/ISendGridConfig.html":{},"interfaces/IUploadFileConfig.html":{},"coverage.html":{}}}],["interfaces",{"_index":439,"title":{},"body":{"interfaces/IAwsConfig.html":{},"interfaces/IFile.html":{},"interfaces/IJWTConfig.html":{},"interfaces/INodeEmailerConfig.html":{},"interfaces/IPostgreSQLConfig.html":{},"interfaces/ISMSConfig.html":{},"interfaces/ISendGridConfig.html":{},"interfaces/IUploadFileConfig.html":{},"overview.html":{}}}],["internal",{"_index":62,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["introduction",{"_index":727,"title":{},"body":{"index.html":{}}}],["ipostgresqlconfig",{"_index":261,"title":{"interfaces/IPostgreSQLConfig.html":{}},"body":{"classes/ConfigService.html":{},"interfaces/IPostgreSQLConfig.html":{},"coverage.html":{}}}],["isendgridconfig",{"_index":263,"title":{"interfaces/ISendGridConfig.html":{}},"body":{"classes/ConfigService.html":{},"interfaces/ISendGridConfig.html":{},"coverage.html":{}}}],["ishealthy",{"_index":492,"title":{},"body":{"injectables/PrismaService.html":{}}}],["ismsconfig",{"_index":265,"title":{"interfaces/ISMSConfig.html":{}},"body":{"classes/ConfigService.html":{},"interfaces/ISMSConfig.html":{},"coverage.html":{}}}],["issue",{"_index":590,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["issuer",{"_index":349,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/IJWTConfig.html":{}}}],["iuploadfileconfig",{"_index":267,"title":{"interfaces/IUploadFileConfig.html":{}},"body":{"classes/ConfigService.html":{},"interfaces/IUploadFileConfig.html":{},"coverage.html":{}}}],["join",{"_index":827,"title":{},"body":{"index.html":{}}}],["json.stringify(_.clone(errorresponse",{"_index":568,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["json.stringify(_.clone(r",{"_index":192,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{}}}],["json.stringify(_.clone(request.body",{"_index":190,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["json.stringify(errorresponse",{"_index":429,"title":{},"body":{"classes/HttpErrorFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["json.stringify(reqstrobj",{"_index":201,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{},"classes/HttpErrorFilter.html":{}}}],["json.stringify(resstrobj",{"_index":206,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{},"classes/HttpErrorFilter.html":{}}}],["jwtconfig",{"_index":222,"title":{},"body":{"classes/ConfigService.html":{}}}],["jwtservice",{"_index":412,"title":{},"body":{"modules/HelperModule.html":{}}}],["k8s",{"_index":809,"title":{},"body":{"index.html":{}}}],["key",{"_index":231,"title":{},"body":{"classes/ConfigService.html":{}}}],["kind",{"_index":876,"title":{},"body":{"license.html":{}}}],["kubectl",{"_index":814,"title":{},"body":{"index.html":{}}}],["large",{"_index":962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/HelperModule.html":{},"overview.html":{}}}],["liability",{"_index":891,"title":{},"body":{"license.html":{}}}],["liable",{"_index":888,"title":{},"body":{"license.html":{}}}],["license",{"_index":830,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":820,"title":{},"body":{"index.html":{}}}],["limit",{"_index":707,"title":{},"body":{"dependencies.html":{}}}],["limitation",{"_index":853,"title":{},"body":{"license.html":{}}}],["limited",{"_index":878,"title":{},"body":{"license.html":{}}}],["line",{"_index":299,"title":{},"body":{"classes/ConfigService.html":{}}}],["linkedin",{"_index":834,"title":{},"body":{"index.html":{}}}],["linting",{"_index":654,"title":{},"body":{"contributing.html":{}}}],["local",{"_index":811,"title":{},"body":{"index.html":{}}}],["lodash",{"_index":162,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{},"classes/HttpErrorFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["logger",{"_index":421,"title":{},"body":{"classes/HttpErrorFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["logger.error",{"_index":428,"title":{},"body":{"classes/HttpErrorFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["logger.error(`${request.method",{"_index":427,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["logic",{"_index":176,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{}}}],["m",{"_index":642,"title":{},"body":{"contributing.html":{}}}],["mac",{"_index":774,"title":{},"body":{"index.html":{}}}],["main",{"_index":729,"title":{},"body":{"index.html":{}}}],["make",{"_index":638,"title":{},"body":{"contributing.html":{}}}],["many",{"_index":972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["markdown",{"_index":765,"title":{},"body":{"index.html":{}}}],["matching",{"_index":67,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/ApiModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/ConfigService.html":{},"classes/FileNotImageException.html":{},"modules/HelperModule.html":{},"classes/HttpErrorFilter.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAwsConfig.html":{},"interfaces/IFile.html":{},"interfaces/IJWTConfig.html":{},"interfaces/INodeEmailerConfig.html":{},"interfaces/IPostgreSQLConfig.html":{},"interfaces/ISMSConfig.html":{},"interfaces/ISendGridConfig.html":{},"interfaces/IUploadFileConfig.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/Query.html":{},"classes/Query-1.html":{},"classes/QueryFailedFilter.html":{},"classes/UserNotFoundException.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["max_upload_file_size",{"_index":387,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/IUploadFileConfig.html":{}}}],["media",{"_index":967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["merchantability",{"_index":880,"title":{},"body":{"license.html":{}}}],["merge",{"_index":856,"title":{},"body":{"license.html":{}}}],["message",{"_index":60,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/FileNotImageException.html":{},"classes/HttpErrorFilter.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["metadata",{"_index":713,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":424,"title":{},"body":{"classes/HttpErrorFilter.html":{},"classes/Query.html":{},"classes/Query-1.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":14,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/ConfigService.html":{},"classes/HttpErrorFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/Query.html":{},"classes/Query-1.html":{},"classes/QueryFailedFilter.html":{}}}],["method},${url},${reqdata},${resdata",{"_index":545,"title":{},"body":{"classes/Query.html":{},"classes/Query-1.html":{}}}],["migration",{"_index":788,"title":{},"body":{"index.html":{}}}],["migrationdocker",{"_index":791,"title":{},"body":{"index.html":{}}}],["mimetype",{"_index":446,"title":{},"body":{"interfaces/IFile.html":{}}}],["minikube",{"_index":813,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":717,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":819,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["modified",{"_index":941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modify",{"_index":855,"title":{},"body":{"license.html":{}}}],["module",{"_index":68,"title":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/HelperModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/HelperModule.html":{},"classes/Query.html":{},"classes/Query-1.html":{},"overview.html":{}}}],["module,method,url,req,response",{"_index":541,"title":{},"body":{"classes/Query.html":{},"classes/Query-1.html":{}}}],["modules",{"_index":70,"title":{"modules.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/HelperModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/post/post.module",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/user/user.module",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["module}','${method}','${url}','${reqescvalue}','${resescvalue",{"_index":543,"title":{},"body":{"classes/Query.html":{},"classes/Query-1.html":{}}}],["more",{"_index":829,"title":{},"body":{"index.html":{}}}],["move",{"_index":937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["much",{"_index":621,"title":{},"body":{"contributing.html":{}}}],["multiline",{"_index":281,"title":{},"body":{"classes/ConfigService.html":{}}}],["multiple_file_path",{"_index":391,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/IUploadFileConfig.html":{}}}],["multiplestatements",{"_index":315,"title":{},"body":{"classes/ConfigService.html":{}}}],["mysql",{"_index":302,"title":{},"body":{"classes/ConfigService.html":{}}}],["n",{"_index":279,"title":{},"body":{"classes/ConfigService.html":{}}}],["name",{"_index":22,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/ConfigService.html":{},"classes/FileNotImageException.html":{},"classes/HttpErrorFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/Query.html":{},"classes/Query-1.html":{},"classes/QueryFailedFilter.html":{},"classes/UserNotFoundException.html":{},"contributing.html":{},"miscellaneous/functions.html":{}}}],["nest",{"_index":818,"title":{},"body":{"index.html":{},"properties.html":{}}}],["nestederrormessage",{"_index":211,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{}}}],["nestjs",{"_index":724,"title":{},"body":{"index.html":{}}}],["nestjs/bull",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["nestjs/common",{"_index":36,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/ApiModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/FileNotImageException.html":{},"modules/HelperModule.html":{},"classes/HttpErrorFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/QueryFailedFilter.html":{},"classes/UserNotFoundException.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":37,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/ApiModule.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/QueryFailedFilter.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":413,"title":{},"body":{"modules/HelperModule.html":{}}}],["nestjs/platform",{"_index":695,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["nestjs/swagger",{"_index":696,"title":{},"body":{"dependencies.html":{}}}],["nestjs/terminus",{"_index":92,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["new",{"_index":56,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/HttpErrorFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/QueryFailedFilter.html":{},"contributing.html":{},"coverage.html":{}}}],["next",{"_index":298,"title":{},"body":{"classes/ConfigService.html":{}}}],["nocontent",{"_index":931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["node.js",{"_index":733,"title":{},"body":{"index.html":{}}}],["node_emailer_from_email",{"_index":373,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/INodeEmailerConfig.html":{}}}],["node_emailer_host",{"_index":365,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/INodeEmailerConfig.html":{}}}],["node_emailer_password",{"_index":371,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/INodeEmailerConfig.html":{}}}],["node_emailer_port",{"_index":367,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/INodeEmailerConfig.html":{}}}],["node_emailer_to_email",{"_index":375,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/INodeEmailerConfig.html":{}}}],["node_emailer_user",{"_index":369,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/INodeEmailerConfig.html":{}}}],["nodeemailerconfig",{"_index":224,"title":{},"body":{"classes/ConfigService.html":{}}}],["nodeenv",{"_index":218,"title":{},"body":{"classes/ConfigService.html":{}}}],["nonauthoritativeinfo",{"_index":929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["noninfringement",{"_index":884,"title":{},"body":{"license.html":{}}}],["notfoundexception",{"_index":578,"title":{},"body":{"classes/UserNotFoundException.html":{}}}],["notice",{"_index":869,"title":{},"body":{"license.html":{}}}],["npm",{"_index":735,"title":{},"body":{"index.html":{}}}],["null",{"_index":426,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["number",{"_index":234,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/IFile.html":{},"interfaces/IJWTConfig.html":{},"interfaces/INodeEmailerConfig.html":{},"interfaces/IUploadFileConfig.html":{}}}],["number(configservice.get('redis.port",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["number(this.get(key",{"_index":290,"title":{},"body":{"classes/ConfigService.html":{}}}],["object",{"_index":921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(process.env",{"_index":285,"title":{},"body":{"classes/ConfigService.html":{}}}],["obtaining",{"_index":844,"title":{},"body":{"license.html":{}}}],["ok",{"_index":923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["one",{"_index":767,"title":{},"body":{"index.html":{}}}],["onmoduledestroy",{"_index":493,"title":{},"body":{"injectables/PrismaService.html":{}}}],["onmoduleinit",{"_index":494,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":618,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["optional",{"_index":24,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/ConfigService.html":{},"classes/FileNotImageException.html":{},"classes/HttpErrorFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/Query.html":{},"classes/Query-1.html":{},"classes/QueryFailedFilter.html":{},"classes/UserNotFoundException.html":{},"miscellaneous/functions.html":{}}}],["origin",{"_index":646,"title":{},"body":{"contributing.html":{}}}],["originalname",{"_index":447,"title":{},"body":{"interfaces/IFile.html":{}}}],["otherwise",{"_index":896,"title":{},"body":{"license.html":{}}}],["out",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/HelperModule.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":905,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":773,"title":{},"body":{"index.html":{}}}],["p2002",{"_index":478,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["package",{"_index":692,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pallette",{"_index":771,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":20,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/ConfigService.html":{},"classes/FileNotImageException.html":{},"classes/HttpErrorFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/Query.html":{},"classes/Query-1.html":{},"classes/QueryFailedFilter.html":{},"classes/UserNotFoundException.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":497,"title":{},"body":{"injectables/PrismaService.html":{}}}],["partialcontent",{"_index":935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["particular",{"_index":882,"title":{},"body":{"license.html":{}}}],["pass",{"_index":657,"title":{},"body":{"contributing.html":{}}}],["password",{"_index":307,"title":{},"body":{"classes/ConfigService.html":{}}}],["patel",{"_index":833,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["patel/nestjs",{"_index":743,"title":{},"body":{"index.html":{},"properties.html":{}}}],["path",{"_index":58,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/ConfigService.html":{},"classes/HttpErrorFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["payload",{"_index":961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["permanent",{"_index":946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["permanently",{"_index":938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["permission",{"_index":838,"title":{},"body":{"license.html":{}}}],["permit",{"_index":863,"title":{},"body":{"license.html":{}}}],["person",{"_index":843,"title":{},"body":{"license.html":{}}}],["persons",{"_index":864,"title":{},"body":{"license.html":{}}}],["petersen",{"_index":758,"title":{},"body":{"index.html":{}}}],["pg",{"_index":710,"title":{},"body":{"dependencies.html":{}}}],["pgsqlservice",{"_index":163,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["please",{"_index":607,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["port",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"classes/ConfigService.html":{}}}],["portions",{"_index":873,"title":{},"body":{"license.html":{}}}],["possible",{"_index":623,"title":{},"body":{"contributing.html":{}}}],["postgres",{"_index":804,"title":{},"body":{"index.html":{}}}],["postgres_connection_limit",{"_index":453,"title":{},"body":{"interfaces/IPostgreSQLConfig.html":{}}}],["postgres_host",{"_index":454,"title":{},"body":{"interfaces/IPostgreSQLConfig.html":{}}}],["postgres_name",{"_index":455,"title":{},"body":{"interfaces/IPostgreSQLConfig.html":{}}}],["postgres_password",{"_index":456,"title":{},"body":{"interfaces/IPostgreSQLConfig.html":{}}}],["postgres_pool_timeout",{"_index":457,"title":{},"body":{"interfaces/IPostgreSQLConfig.html":{}}}],["postgres_port",{"_index":458,"title":{},"body":{"interfaces/IPostgreSQLConfig.html":{}}}],["postgres_schema",{"_index":459,"title":{},"body":{"interfaces/IPostgreSQLConfig.html":{}}}],["postgres_user",{"_index":460,"title":{},"body":{"interfaces/IPostgreSQLConfig.html":{}}}],["postgresql://${this.get('postgres_user')}:${this.get('postgres_password')}@${this.get('postgres_host')}:${this.get('postgres_port')}/${this.get('postgres_name')}?connection_limit=${this.get('postgres_connection_limit')}&pool_timeout=${this.get('postgres_pool_timeout')}&schema=${this.get('postgres_schema",{"_index":320,"title":{},"body":{"classes/ConfigService.html":{}}}],["postmodule",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["prerequisites",{"_index":730,"title":{},"body":{"index.html":{}}}],["prettier",{"_index":753,"title":{},"body":{"index.html":{}}}],["prisma",{"_index":470,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/QueryFailedFilter.html":{},"index.html":{}}}],["prisma.io",{"_index":760,"title":{},"body":{"index.html":{}}}],["prisma.prisma",{"_index":759,"title":{},"body":{"index.html":{}}}],["prisma.prismaclientknownrequesterror",{"_index":467,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["prisma.transactionclient",{"_index":501,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prisma/client",{"_index":471,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/QueryFailedFilter.html":{},"dependencies.html":{}}}],["prisma/migration",{"_index":790,"title":{},"body":{"index.html":{}}}],["prismaclient",{"_index":489,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaclientexceptionfilter",{"_index":465,"title":{"classes/PrismaClientExceptionFilter.html":{}},"body":{"classes/PrismaClientExceptionFilter.html":{},"classes/QueryFailedFilter.html":{},"coverage.html":{}}}],["prismaclientknownrequesterror",{"_index":484,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["prismaconfig",{"_index":219,"title":{},"body":{"classes/ConfigService.html":{}}}],["prismaservice",{"_index":93,"title":{"injectables/PrismaService.html":{}},"body":{"controllers/AppController.html":{},"modules/HelperModule.html":{},"injectables/PrismaService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["private",{"_index":98,"title":{},"body":{"controllers/AppController.html":{},"classes/BadRequestExceptionFilter.html":{}}}],["process",{"_index":611,"title":{},"body":{"contributing.html":{}}}],["process.env[envname",{"_index":286,"title":{},"body":{"classes/ConfigService.html":{}}}],["process.env[envname].replace(/\\\\n/g",{"_index":287,"title":{},"body":{"classes/ConfigService.html":{}}}],["process.env[key",{"_index":288,"title":{},"body":{"classes/ConfigService.html":{}}}],["production",{"_index":272,"title":{},"body":{"classes/ConfigService.html":{},"index.html":{}}}],["productionbuild",{"_index":782,"title":{},"body":{"index.html":{}}}],["profile_pic_file_path",{"_index":389,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/IUploadFileConfig.html":{}}}],["project",{"_index":602,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["promise",{"_index":499,"title":{},"body":{"injectables/PrismaService.html":{}}}],["promise.resolve",{"_index":523,"title":{},"body":{"injectables/PrismaService.html":{}}}],["properties",{"_index":11,"title":{"properties.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"classes/BadRequestExceptionFilter.html":{},"interfaces/IAwsConfig.html":{},"interfaces/IFile.html":{},"interfaces/IJWTConfig.html":{},"interfaces/INodeEmailerConfig.html":{},"interfaces/IPostgreSQLConfig.html":{},"interfaces/ISMSConfig.html":{},"interfaces/ISendGridConfig.html":{},"interfaces/IUploadFileConfig.html":{},"classes/QueryFailedFilter.html":{},"properties.html":{}}}],["provide",{"_index":78,"title":{},"body":{"modules/ApiModule.html":{}}}],["provided",{"_index":874,"title":{},"body":{"license.html":{}}}],["providers",{"_index":77,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/HelperModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":12,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/ConfigService.html":{},"classes/QueryFailedFilter.html":{},"miscellaneous/variables.html":{}}}],["public_route_key",{"_index":676,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["publicroute",{"_index":95,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["publish",{"_index":857,"title":{},"body":{"license.html":{}}}],["pull",{"_index":648,"title":{},"body":{"contributing.html":{}}}],["purpose",{"_index":883,"title":{},"body":{"license.html":{}}}],["push",{"_index":645,"title":{},"body":{"contributing.html":{}}}],["put",{"_index":174,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{}}}],["qr_image",{"_index":339,"title":{},"body":{"classes/ConfigService.html":{}}}],["qr_image_path",{"_index":341,"title":{},"body":{"classes/ConfigService.html":{}}}],["qr_image_path_salt",{"_index":343,"title":{},"body":{"classes/ConfigService.html":{}}}],["qrconfig",{"_index":221,"title":{},"body":{"classes/ConfigService.html":{}}}],["query",{"_index":165,"title":{"classes/Query.html":{},"classes/Query-1.html":{}},"body":{"classes/BadRequestExceptionFilter.html":{},"classes/HttpErrorFilter.html":{},"injectables/PrismaService.html":{},"classes/Query.html":{},"classes/Query-1.html":{},"classes/QueryFailedFilter.html":{},"coverage.html":{}}}],["query.addhttpqueryerror(\"httperror",{"_index":431,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["query.addqueryerror(\"badrequest",{"_index":194,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{}}}],["queryfailederror",{"_index":556,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["queryfailedfilter",{"_index":550,"title":{"classes/QueryFailedFilter.html":{}},"body":{"classes/QueryFailedFilter.html":{},"coverage.html":{}}}],["r",{"_index":167,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{},"properties.html":{}}}],["r.error",{"_index":172,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{}}}],["r.message",{"_index":171,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{}}}],["r.message[0",{"_index":170,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{}}}],["r.statuscode",{"_index":183,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{}}}],["rate",{"_index":706,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":828,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":99,"title":{},"body":{"controllers/AppController.html":{}}}],["recomandation",{"_index":736,"title":{},"body":{"index.html":{}}}],["record",{"_index":917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirect",{"_index":944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redis",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["redisswagger",{"_index":805,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":712,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":13,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["release",{"_index":597,"title":{},"body":{"changelog.html":{}}}],["replace",{"_index":278,"title":{},"body":{"classes/ConfigService.html":{}}}],["reporting",{"_index":614,"title":{},"body":{"contributing.html":{}}}],["repository",{"_index":631,"title":{},"body":{"contributing.html":{},"properties.html":{}}}],["repository:example",{"_index":741,"title":{},"body":{"index.html":{}}}],["reqdata",{"_index":530,"title":{},"body":{"classes/Query.html":{},"classes/Query-1.html":{}}}],["reqescvalue",{"_index":536,"title":{},"body":{"classes/Query.html":{},"classes/Query-1.html":{}}}],["reqescvalue.replace(/'/g",{"_index":538,"title":{},"body":{"classes/Query.html":{},"classes/Query-1.html":{}}}],["reqstr",{"_index":189,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{},"classes/HttpErrorFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["reqstrobj",{"_index":196,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{},"classes/HttpErrorFilter.html":{}}}],["request",{"_index":38,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/HttpErrorFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/QueryFailedFilter.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["request.filter.ts",{"_index":148,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{},"coverage.html":{}}}],["request.filter.ts:20",{"_index":150,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{}}}],["request.filter.ts:21",{"_index":151,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{}}}],["request.filter.ts:23",{"_index":157,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{}}}],["request.filter.ts:65",{"_index":154,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{}}}],["request.method",{"_index":195,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{},"classes/HttpErrorFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["request.url",{"_index":59,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/HttpErrorFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["requests",{"_index":627,"title":{},"body":{"contributing.html":{},"miscellaneous/variables.html":{}}}],["res",{"_index":203,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{},"classes/HttpErrorFilter.html":{}}}],["resdata",{"_index":531,"title":{},"body":{"classes/Query.html":{},"classes/Query-1.html":{}}}],["resescvalue",{"_index":537,"title":{},"body":{"classes/Query.html":{},"classes/Query-1.html":{}}}],["resescvalue.replace(/'/g",{"_index":539,"title":{},"body":{"classes/Query.html":{},"classes/Query-1.html":{}}}],["reset",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"modules/HelperModule.html":{},"overview.html":{}}}],["resetcontent",{"_index":933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response",{"_index":39,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/HttpErrorFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["response.status(status).json",{"_index":437,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["response.status(status).json(errorresponse",{"_index":65,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpErrorFilter.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["response.status(statuscode).json(r",{"_index":185,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{}}}],["response_serialization_meta_key",{"_index":677,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["responseserializationmetakey",{"_index":981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resstr",{"_index":191,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{},"classes/HttpErrorFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["resstrobj",{"_index":202,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{},"classes/HttpErrorFilter.html":{}}}],["restriction",{"_index":851,"title":{},"body":{"license.html":{}}}],["results",{"_index":66,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/ApiModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/ConfigService.html":{},"classes/FileNotImageException.html":{},"modules/HelperModule.html":{},"classes/HttpErrorFilter.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAwsConfig.html":{},"interfaces/IFile.html":{},"interfaces/IJWTConfig.html":{},"interfaces/INodeEmailerConfig.html":{},"interfaces/IPostgreSQLConfig.html":{},"interfaces/ISMSConfig.html":{},"interfaces/ISendGridConfig.html":{},"interfaces/IUploadFileConfig.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/Query.html":{},"classes/Query-1.html":{},"classes/QueryFailedFilter.html":{},"classes/UserNotFoundException.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":101,"title":{},"body":{"controllers/AppController.html":{},"classes/ConfigService.html":{},"injectables/PrismaService.html":{},"classes/Query.html":{},"classes/Query-1.html":{}}}],["returns",{"_index":31,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/ConfigService.html":{},"classes/HttpErrorFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/Query.html":{},"classes/Query-1.html":{},"classes/QueryFailedFilter.html":{}}}],["rights",{"_index":854,"title":{},"body":{"license.html":{}}}],["run",{"_index":660,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["running",{"_index":655,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["rxjs",{"_index":715,"title":{},"body":{"dependencies.html":{}}}],["schedulemodule",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["script",{"_index":794,"title":{},"body":{"index.html":{}}}],["search",{"_index":777,"title":{},"body":{"index.html":{}}}],["secret",{"_index":345,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/IJWTConfig.html":{}}}],["select",{"_index":544,"title":{},"body":{"classes/Query.html":{},"classes/Query-1.html":{}}}],["sell",{"_index":861,"title":{},"body":{"license.html":{}}}],["sender_id",{"_index":381,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/ISMSConfig.html":{}}}],["sendgrid_api_key",{"_index":357,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/ISendGridConfig.html":{}}}],["sendgridconfig",{"_index":223,"title":{},"body":{"classes/ConfigService.html":{}}}],["server",{"_index":63,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpErrorFilter.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":215,"title":{},"body":{"classes/ConfigService.html":{},"injectables/PrismaService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["services",{"_index":801,"title":{},"body":{"index.html":{}}}],["services/config.service",{"_index":408,"title":{},"body":{"modules/HelperModule.html":{},"injectables/PrismaService.html":{}}}],["services/encryption.service",{"_index":415,"title":{},"body":{"modules/HelperModule.html":{}}}],["services/prisma.service",{"_index":409,"title":{},"body":{"modules/HelperModule.html":{}}}],["services/task.service",{"_index":417,"title":{},"body":{"modules/HelperModule.html":{}}}],["setmetadata(public_route_key",{"_index":983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sh",{"_index":661,"title":{},"body":{"contributing.html":{}}}],["shall",{"_index":870,"title":{},"body":{"license.html":{}}}],["shared/services/sql.service",{"_index":422,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["shift",{"_index":772,"title":{},"body":{"index.html":{}}}],["size",{"_index":448,"title":{},"body":{"interfaces/IFile.html":{}}}],["smooth",{"_index":610,"title":{},"body":{"contributing.html":{}}}],["sms_provider_name",{"_index":377,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/ISMSConfig.html":{}}}],["smsconfig",{"_index":225,"title":{},"body":{"classes/ConfigService.html":{}}}],["software",{"_index":846,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/ApiModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/ConfigService.html":{},"classes/FileNotImageException.html":{},"modules/HelperModule.html":{},"classes/HttpErrorFilter.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAwsConfig.html":{},"interfaces/IFile.html":{},"interfaces/IJWTConfig.html":{},"interfaces/INodeEmailerConfig.html":{},"interfaces/IPostgreSQLConfig.html":{},"interfaces/ISMSConfig.html":{},"interfaces/ISendGridConfig.html":{},"interfaces/IUploadFileConfig.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/Query.html":{},"classes/Query-1.html":{},"classes/QueryFailedFilter.html":{},"classes/UserNotFoundException.html":{},"index.html":{}}}],["specific",{"_index":572,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["sponsors",{"_index":823,"title":{},"body":{"index.html":{}}}],["sql",{"_index":540,"title":{},"body":{"classes/Query.html":{},"classes/Query-1.html":{}}}],["sqlservice",{"_index":188,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{},"classes/HttpErrorFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["sqlservice.run",{"_index":193,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{},"classes/HttpErrorFilter.html":{}}}],["sqlservice.run(query.addqueryerror(\"dbquery",{"_index":569,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["src/**/**.entity{.ts,.js",{"_index":317,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/.../constraint",{"_index":913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../core.constant.ts",{"_index":914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../helper.module.ts",{"_index":915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":719,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../public.request.decorator.ts",{"_index":916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../swagger.ts",{"_index":720,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/api.module.ts",{"_index":71,"title":{},"body":{"modules/ApiModule.html":{}}}],["src/app/app.controller.ts",{"_index":83,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app/app.controller.ts:20",{"_index":88,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app/app.module.ts",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["src/common/common.module",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["src/common/helper/helper.module",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["src/common/helper/helper.module.ts",{"_index":407,"title":{},"body":{"modules/HelperModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/helper/services/config.service.ts",{"_index":212,"title":{},"body":{"classes/ConfigService.html":{},"coverage.html":{}}}],["src/common/helper/services/config.service.ts:106",{"_index":246,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/common/helper/services/config.service.ts:115",{"_index":248,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/common/helper/services/config.service.ts:126",{"_index":250,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/common/helper/services/config.service.ts:134",{"_index":252,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/common/helper/services/config.service.ts:18",{"_index":227,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/common/helper/services/config.service.ts:39",{"_index":230,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/common/helper/services/config.service.ts:43",{"_index":233,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/common/helper/services/config.service.ts:47",{"_index":236,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/common/helper/services/config.service.ts:69",{"_index":238,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/common/helper/services/config.service.ts:73",{"_index":240,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/common/helper/services/config.service.ts:87",{"_index":242,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/common/helper/services/config.service.ts:95",{"_index":244,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/common/helper/services/prisma.service.ts",{"_index":488,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/common/helper/services/prisma.service.ts:15",{"_index":495,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/common/helper/services/prisma.service.ts:31",{"_index":507,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/common/helper/services/prisma.service.ts:35",{"_index":506,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/common/helper/services/prisma.service.ts:39",{"_index":498,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/common/helper/services/prisma.service.ts:43",{"_index":502,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/common/helper/services/prisma.service.ts:49",{"_index":505,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/core/constants/core.constant.ts",{"_index":674,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/core.module",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["src/core/decorators/public.request.decorator",{"_index":96,"title":{},"body":{"controllers/AppController.html":{}}}],["src/core/decorators/public.request.decorator.ts",{"_index":678,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/exceptions/file",{"_index":394,"title":{},"body":{"classes/FileNotImageException.html":{},"coverage.html":{}}}],["src/core/exceptions/http",{"_index":418,"title":{},"body":{"classes/HttpErrorFilter.html":{},"coverage.html":{}}}],["src/core/exceptions/query.ts",{"_index":546,"title":{},"body":{"classes/Query-1.html":{},"coverage.html":{}}}],["src/core/exceptions/query.ts:4",{"_index":549,"title":{},"body":{"classes/Query-1.html":{}}}],["src/core/exceptions/user",{"_index":576,"title":{},"body":{"classes/UserNotFoundException.html":{},"coverage.html":{}}}],["src/core/filters/all",{"_index":6,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["src/core/filters/bad",{"_index":147,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{},"coverage.html":{}}}],["src/core/filters/constraint",{"_index":681,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/filters/http",{"_index":433,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/core/filters/prisma",{"_index":466,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"coverage.html":{}}}],["src/core/filters/query",{"_index":551,"title":{},"body":{"classes/QueryFailedFilter.html":{},"coverage.html":{}}}],["src/core/filters/query.ts",{"_index":527,"title":{},"body":{"classes/Query.html":{},"coverage.html":{}}}],["src/core/filters/query.ts:4",{"_index":532,"title":{},"body":{"classes/Query.html":{}}}],["src/core/interfaces/aws.interfaces.ts",{"_index":440,"title":{},"body":{"interfaces/IAwsConfig.html":{},"coverage.html":{}}}],["src/core/interfaces/file.interfaces.ts",{"_index":442,"title":{},"body":{"interfaces/IFile.html":{},"coverage.html":{}}}],["src/core/interfaces/jwt.interfaces.ts",{"_index":449,"title":{},"body":{"interfaces/IJWTConfig.html":{},"coverage.html":{}}}],["src/core/interfaces/node",{"_index":450,"title":{},"body":{"interfaces/INodeEmailerConfig.html":{},"coverage.html":{}}}],["src/core/interfaces/postgres.interfaces.ts",{"_index":452,"title":{},"body":{"interfaces/IPostgreSQLConfig.html":{},"coverage.html":{}}}],["src/core/interfaces/sendgrid.interfaces.ts",{"_index":462,"title":{},"body":{"interfaces/ISendGridConfig.html":{},"coverage.html":{}}}],["src/core/interfaces/sms.interfaces.ts",{"_index":461,"title":{},"body":{"interfaces/ISMSConfig.html":{},"coverage.html":{}}}],["src/core/interfaces/upload",{"_index":463,"title":{},"body":{"interfaces/IUploadFileConfig.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":687,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/swagger.ts",{"_index":688,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["staging",{"_index":276,"title":{},"body":{"classes/ConfigService.html":{},"index.html":{}}}],["staging/production",{"_index":793,"title":{},"body":{"index.html":{}}}],["staging/productiondocker",{"_index":798,"title":{},"body":{"index.html":{}}}],["staging/productionrunning",{"_index":800,"title":{},"body":{"index.html":{}}}],["start",{"_index":781,"title":{},"body":{"index.html":{}}}],["start.sh",{"_index":797,"title":{},"body":{"index.html":{}}}],["started",{"_index":583,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["starter",{"_index":725,"title":{},"body":{"index.html":{},"properties.html":{}}}],["starter.git",{"_index":744,"title":{},"body":{"index.html":{},"properties.html":{}}}],["starter.git#readme",{"_index":909,"title":{},"body":{"properties.html":{}}}],["starter.git/issues",{"_index":910,"title":{},"body":{"properties.html":{}}}],["statements",{"_index":667,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":49,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpErrorFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/QueryFailedFilter.html":{}}}],["status_codes",{"_index":158,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["status_codes[status",{"_index":570,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["status_codes[statuscode",{"_index":184,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{}}}],["statuscode",{"_index":54,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["stop.sh",{"_index":799,"title":{},"body":{"index.html":{}}}],["strict",{"_index":401,"title":{},"body":{"classes/FileNotImageException.html":{},"interfaces/IAwsConfig.html":{},"interfaces/IFile.html":{},"interfaces/IJWTConfig.html":{},"interfaces/INodeEmailerConfig.html":{},"interfaces/IPostgreSQLConfig.html":{},"interfaces/ISMSConfig.html":{},"interfaces/ISendGridConfig.html":{},"interfaces/IUploadFileConfig.html":{},"classes/UserNotFoundException.html":{}}}],["string",{"_index":229,"title":{},"body":{"classes/ConfigService.html":{},"classes/FileNotImageException.html":{},"interfaces/IAwsConfig.html":{},"interfaces/IFile.html":{},"interfaces/IJWTConfig.html":{},"interfaces/INodeEmailerConfig.html":{},"interfaces/IPostgreSQLConfig.html":{},"interfaces/ISMSConfig.html":{},"interfaces/ISendGridConfig.html":{},"interfaces/IUploadFileConfig.html":{},"injectables/PrismaService.html":{},"classes/Query.html":{},"classes/Query-1.html":{},"classes/UserNotFoundException.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":282,"title":{},"body":{"classes/ConfigService.html":{}}}],["studio",{"_index":748,"title":{},"body":{"index.html":{}}}],["style",{"_index":649,"title":{},"body":{"contributing.html":{}}}],["subject",{"_index":866,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":859,"title":{},"body":{"license.html":{}}}],["submitting",{"_index":659,"title":{},"body":{"contributing.html":{}}}],["substantial",{"_index":872,"title":{},"body":{"license.html":{}}}],["suggesting",{"_index":624,"title":{},"body":{"contributing.html":{}}}],["super",{"_index":511,"title":{},"body":{"injectables/PrismaService.html":{}}}],["super('error.file.not_image",{"_index":403,"title":{},"body":{"classes/FileNotImageException.html":{}}}],["super('error.user_not_found",{"_index":581,"title":{},"body":{"classes/UserNotFoundException.html":{}}}],["super(message",{"_index":402,"title":{},"body":{"classes/FileNotImageException.html":{}}}],["super.catch(exception",{"_index":483,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["support",{"_index":280,"title":{},"body":{"classes/ConfigService.html":{},"index.html":{},"modules.html":{}}}],["svg",{"_index":904,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":806,"title":{},"body":{"index.html":{}}}],["switch",{"_index":475,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["synchronize",{"_index":313,"title":{},"body":{"classes/ConfigService.html":{}}}],["syntax",{"_index":533,"title":{},"body":{"classes/Query.html":{},"classes/Query-1.html":{}}}],["table",{"_index":691,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":690,"title":{},"body":{"coverage.html":{}}}],["taskservice",{"_index":416,"title":{},"body":{"modules/HelperModule.html":{}}}],["temp_file_upload_url",{"_index":383,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/IUploadFileConfig.html":{}}}],["temporary",{"_index":943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["terminusmodule",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["test",{"_index":663,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["test:covdatabase",{"_index":787,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":786,"title":{},"body":{"index.html":{}}}],["tests",{"_index":656,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["thanks",{"_index":822,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":515,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$disconnect",{"_index":516,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$queryraw`select",{"_index":520,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$queryrawunsafe(query",{"_index":517,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$transaction(actions",{"_index":518,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this._validationfilter(validationerrors",{"_index":173,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{}}}],["this.get(\"database_host",{"_index":303,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get(\"database_pass",{"_index":308,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get(\"database_schema",{"_index":310,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get(\"database_user",{"_index":306,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('api_key",{"_index":380,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('aws_s3_access_key_id",{"_index":322,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('aws_s3_bucket_name",{"_index":326,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('aws_s3_companion_secret",{"_index":336,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('aws_s3_default_region",{"_index":328,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('aws_s3_endpoint",{"_index":332,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('aws_s3_secret_access_key",{"_index":324,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('aws_s3_server_host",{"_index":334,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('aws_s3_temp_directory",{"_index":330,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('file_upload_destination",{"_index":386,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('from_email",{"_index":360,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('jwt_algorithm",{"_index":348,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('jwt_audience",{"_index":352,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('jwt_issuer",{"_index":350,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('jwt_secret_key",{"_index":346,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('multiple_file_path",{"_index":392,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('node_emailer_from_email",{"_index":374,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('node_emailer_host",{"_index":366,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('node_emailer_password",{"_index":372,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('node_emailer_to_email",{"_index":376,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('node_emailer_user",{"_index":370,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('node_env",{"_index":291,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('profile_pic_file_path",{"_index":390,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('qr_image",{"_index":340,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('qr_image_path",{"_index":342,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('qr_image_path_salt",{"_index":344,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('sender_id",{"_index":382,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('sendgrid_api_key",{"_index":358,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('sms_provider_name",{"_index":378,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('temp_file_upload_url",{"_index":384,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('to_email",{"_index":362,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('tus_storage_driver",{"_index":338,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('welcome_email",{"_index":364,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getnumber(\"database_port",{"_index":304,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getnumber('jwt_expiration_time",{"_index":356,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getnumber('jwt_expires_in_seconds",{"_index":354,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getnumber('max_upload_file_size",{"_index":388,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getnumber('node_emailer_port",{"_index":368,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.healthcheckservice.check",{"_index":102,"title":{},"body":{"controllers/AppController.html":{}}}],["this.nodeenv",{"_index":270,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.prismaservice.ishealthy",{"_index":103,"title":{},"body":{"controllers/AppController.html":{}}}],["timeout",{"_index":980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timestamp",{"_index":55,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpErrorFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["to_email",{"_index":361,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/ISendGridConfig.html":{}}}],["tool/linter",{"_index":652,"title":{},"body":{"contributing.html":{}}}],["tort",{"_index":895,"title":{},"body":{"license.html":{}}}],["transformer",{"_index":700,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":314,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":186,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{},"classes/HttpErrorFilter.html":{},"injectables/PrismaService.html":{},"classes/Query.html":{},"classes/Query-1.html":{},"classes/QueryFailedFilter.html":{}}}],["tus_storage_driver",{"_index":337,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/IAwsConfig.html":{}}}],["type",{"_index":23,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/ConfigService.html":{},"classes/FileNotImageException.html":{},"classes/HttpErrorFilter.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAwsConfig.html":{},"interfaces/IFile.html":{},"interfaces/IJWTConfig.html":{},"interfaces/INodeEmailerConfig.html":{},"interfaces/IPostgreSQLConfig.html":{},"interfaces/ISMSConfig.html":{},"interfaces/ISendGridConfig.html":{},"interfaces/IUploadFileConfig.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/Query.html":{},"classes/Query-1.html":{},"classes/QueryFailedFilter.html":{},"classes/UserNotFoundException.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":557,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["typeormconfig",{"_index":293,"title":{},"body":{"classes/ConfigService.html":{}}}],["typeormmoduleoptions",{"_index":294,"title":{},"body":{"classes/ConfigService.html":{}}}],["typescript",{"_index":300,"title":{},"body":{"classes/ConfigService.html":{},"properties.html":{}}}],["unauthorized",{"_index":950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unavailable",{"_index":978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["undefined",{"_index":289,"title":{},"body":{"classes/ConfigService.html":{}}}],["unique",{"_index":573,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["unit",{"_index":784,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":43,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{}}}],["unnamed",{"_index":689,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["unprocessable",{"_index":969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unsupported",{"_index":966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["up",{"_index":524,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["update",{"_index":795,"title":{},"body":{"index.html":{}}}],["updated",{"_index":592,"title":{},"body":{"changelog.html":{}}}],["uploadfileconfig",{"_index":226,"title":{},"body":{"classes/ConfigService.html":{}}}],["uq_97672ac88f789774dd47f7c8be3",{"_index":919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uri",{"_index":964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["url",{"_index":513,"title":{},"body":{"injectables/PrismaService.html":{},"classes/Query.html":{},"classes/Query-1.html":{}}}],["use",{"_index":400,"title":{},"body":{"classes/FileNotImageException.html":{},"interfaces/IAwsConfig.html":{},"interfaces/IFile.html":{},"interfaces/IJWTConfig.html":{},"interfaces/INodeEmailerConfig.html":{},"interfaces/IPostgreSQLConfig.html":{},"interfaces/ISMSConfig.html":{},"interfaces/ISendGridConfig.html":{},"interfaces/IUploadFileConfig.html":{},"classes/UserNotFoundException.html":{},"contributing.html":{},"index.html":{},"license.html":{}}}],["useclass",{"_index":79,"title":{},"body":{"modules/ApiModule.html":{}}}],["used",{"_index":651,"title":{},"body":{"contributing.html":{}}}],["usefactory",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["usermodule",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["username",{"_index":305,"title":{},"body":{"classes/ConfigService.html":{}}}],["usernotfoundexception",{"_index":575,"title":{"classes/UserNotFoundException.html":{}},"body":{"classes/UserNotFoundException.html":{},"coverage.html":{}}}],["validationerror",{"_index":153,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{}}}],["validationerror.children",{"_index":208,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{}}}],["validationerror.children.length",{"_index":209,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{}}}],["validationerrors",{"_index":155,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{}}}],["validator",{"_index":160,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{},"dependencies.html":{}}}],["value",{"_index":918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["values",{"_index":542,"title":{},"body":{"classes/Query.html":{},"classes/Query-1.html":{}}}],["var",{"_index":187,"title":{},"body":{"classes/BadRequestExceptionFilter.html":{}}}],["variable",{"_index":669,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":912,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":97,"title":{},"body":{"controllers/AppController.html":{},"properties.html":{}}}],["version_neutral",{"_index":89,"title":{},"body":{"controllers/AppController.html":{}}}],["visual",{"_index":747,"title":{},"body":{"index.html":{}}}],["void",{"_index":32,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BadRequestExceptionFilter.html":{},"classes/HttpErrorFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/QueryFailedFilter.html":{}}}],["vscode",{"_index":756,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":879,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":875,"title":{},"body":{"license.html":{}}}],["welcome",{"_index":604,"title":{},"body":{"contributing.html":{}}}],["welcome_email",{"_index":363,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/ISendGridConfig.html":{}}}],["whether",{"_index":892,"title":{},"body":{"license.html":{}}}],["windows",{"_index":776,"title":{},"body":{"index.html":{}}}],["without",{"_index":850,"title":{},"body":{"license.html":{}}}],["x",{"_index":519,"title":{},"body":{"injectables/PrismaService.html":{}}}],["yarn",{"_index":662,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["yarnrunning",{"_index":780,"title":{},"body":{"index.html":{}}}],["yes",{"_index":399,"title":{},"body":{"classes/FileNotImageException.html":{},"injectables/PrismaService.html":{},"classes/UserNotFoundException.html":{}}}],["you'd",{"_index":826,"title":{},"body":{"index.html":{}}}],["yourproject",{"_index":746,"title":{},"body":{"index.html":{}}}],["yu",{"_index":768,"title":{},"body":{"index.html":{}}}],["yzhang.markdown",{"_index":766,"title":{},"body":{"index.html":{}}}],["zhang",{"_index":769,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"modules/HelperModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filters/all-exceptions.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                reflector\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/core/filters/all-exceptions.filter.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        reflector\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Reflector\n\n                    \n                \n                    \n                        \n                                Defined in src/core/filters/all-exceptions.filter.ts:41\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/filters/all-exceptions.filter.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExceptionFilter, Catch, ArgumentsHost, HttpException, HttpStatus } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\n\nimport { Request, Response } from 'express';\n\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter {\n    constructor(public reflector: Reflector) {}\n    catch(exception: unknown, host: ArgumentsHost) {\n        const ctx = host.switchToHttp();\n        const response = ctx.getResponse();\n        const request = ctx.getRequest();\n        const status =\n            exception instanceof HttpException\n                ? exception.getStatus()\n                : HttpStatus.INTERNAL_SERVER_ERROR;\n\n        const errorResponse = {\n            statusCode: status,\n            timestamp: new Date().toISOString(),\n            path: request.url,\n            message: (exception as any).message || 'Internal server error',\n        };\n\n        response.status(status).json(errorResponse);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApiModule.html":{"url":"modules/ApiModule.html","title":"module - ApiModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/api.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_FILTER } from '@nestjs/core';\n\nimport { HttpErrorFilter } from '../core/exceptions/http-error.filter';\n\n@Module({\n    imports: [],\n    providers: [\n        {\n            provide: APP_FILTER,\n            useClass: HttpErrorFilter,\n        },\n    ],\n})\nexport class ApiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                getHealth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        getHealth\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHealth()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/health')@HealthCheck()\n                \n            \n\n                    \n                        \n                            Defined in src/app/app.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, VERSION_NEUTRAL } from '@nestjs/common';\nimport { HealthCheck, HealthCheckService } from '@nestjs/terminus';\n\nimport { PrismaService } from '../common/helper/services/prisma.service';\n// import { PublicRoute } from 'src/core/decorators/public.request.decorator';\n\n@Controller({\n    version: VERSION_NEUTRAL,\n    path: '/',\n})\nexport class AppController {\n    constructor(\n        private readonly healthCheckService: HealthCheckService,\n        private readonly prismaService: PrismaService\n    ) {}\n\n    @Get('/health')\n    @HealthCheck()\n    // @PublicRoute()\n    public async getHealth() {\n        return this.healthCheckService.check([() => this.prismaService.isHealthy()]);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nApiModule\n\nApiModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiModule->AppModule\n\n\n\n\n\nHelperModule\n\nHelperModule\n\nAppModule -->\n\nHelperModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiModule\n                        \n                        \n                            HelperModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n// import { ScheduleModule } from '@nestjs/schedule';\n// import { BullModule } from '@nestjs/bull';\n// import { ConfigModule, ConfigService } from '@nestjs/config';\n// import { ConfigService } from \"../common/helper/services/config.service\";\nimport { TerminusModule } from '@nestjs/terminus';\n\nimport { HelperModule } from '../common/helper/helper.module';\n\n// import { CommonModule } from 'src/common/common.module';\n// import { CoreModule } from 'src/core/core.module';\n// import { HelperModule } from 'src/common/helper/helper.module';\n\n// import { PostModule } from '../modules/post/post.module';\n// import { UserModule } from '../modules/user/user.module';\n\nimport { ApiModule } from './api.module';\nimport { AppController } from './app.controller';\n\n@Module({\n    controllers: [AppController],\n    imports: [\n        ApiModule,\n        TerminusModule,\n        // CoreModule,\n        // CommonModule,\n        HelperModule,\n        // ScheduleModule.forRoot(),\n        // PostModule,\n        // UserModule,\n\n        // BullModule.forRootAsync({\n        //   imports: [ConfigModule],\n        //   useFactory: async (configService: ConfigService) => ({\n        //     redis: {\n        //       host: configService.get('redis.host'),\n        //       port: Number(configService.get('redis.port')),\n        //     },\n        //   }),\n        //   inject: [ConfigService],\n        // }),\n    ],\n    // providers: [ConfigService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BadRequestExceptionFilter.html":{"url":"classes/BadRequestExceptionFilter.html","title":"class - BadRequestExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BadRequestExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filters/bad-request.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                reflector\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _validationFilter\n                            \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/core/filters/bad-request.filter.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        reflector\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Reflector\n\n                    \n                \n                    \n                        \n                                Defined in src/core/filters/bad-request.filter.ts:21\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _validationFilter\n                        \n                    \n                \n            \n            \n                \n                        \n                    _validationFilter(validationErrors: ValidationError[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/filters/bad-request.filter.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                validationErrors\n                                            \n                                                        ValidationError[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: BadRequestException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/filters/bad-request.filter.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        BadRequestException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { STATUS_CODES } from 'http';\n\nimport {\n    ArgumentsHost,\n    BadRequestException,\n    Catch,\n    ExceptionFilter,\n    // HttpStatus,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\n\nimport { ValidationError } from 'class-validator';\nimport { Response } from 'express';\nimport * as _ from 'lodash';\n\n// import { PgSQLService } from \"../common/shared/services/pgsql.service\";\n// import { Query } from './query';\n\n@Catch(BadRequestException)\nexport class BadRequestExceptionFilter implements ExceptionFilter {\n    constructor(public reflector: Reflector) {}\n\n    catch(exception: BadRequestException, host: ArgumentsHost) {\n        const ctx = host.switchToHttp();\n        const response = ctx.getResponse();\n        // const request = ctx.getRequest();\n        const statusCode = exception.getStatus();\n        const r = exception.getResponse();\n\n        if (_.isArray(r.message) && r.message[0] instanceof ValidationError) {\n            const validationErrors = r.message;\n            r.error = this._validationFilter(validationErrors);\n        }\n\n        //put api logic here to fetch from db is erro code found\n        r.statusCode = statusCode;\n        r.message = STATUS_CODES[statusCode];\n\n        response.status(statusCode).json(r);\n\n        // try {\n        //   var sqlService = new PgSQLService();\n        //   var query = new Query();\n        //   var reqstr = JSON.stringify(_.clone(request.body));\n        //   var resstr = JSON.stringify(_.clone(r));\n        //   sqlService.run(\n        //     query.addQueryError(\"BadRequest\", request.method, request.url, reqstr, resstr)\n        //   );\n        // } catch (error) {}\n\n        // try {\n        //   var sqlService = new PgSQLService();\n        //   var query = new Query();\n        //   const reqstrobj = { body: _.clone(request.body), header: _.clone(request.header) };\n        //   var reqstr = JSON.stringify(reqstrobj);\n\n        //   const resstrobj = { res: _.clone(r), exception: exception.stack };\n        //   var resstr = JSON.stringify(resstrobj);\n        //   sqlService.run(\n        //     query.addQueryError(\"BadRequest\", request.method, request.url, reqstr, resstr)\n        //   );\n        // } catch (error) {}\n    }\n\n    private _validationFilter(validationErrors: ValidationError[]) {\n        const errorMessages = {};\n\n        for (const validationError of validationErrors) {\n            if (validationError.children && validationError.children.length > 0) {\n                const nestedErrorMessage = {};\n                for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigService.html":{"url":"classes/ConfigService.html","title":"class - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helper/services/config.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Config service\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    nodeEnv\n                                \n                                \n                                    prismaConfig\n                                \n                                \n                                    awsS3Config\n                                \n                                \n                                    qrConfig\n                                \n                                \n                                    jwtConfig\n                                \n                                \n                                    sendgridConfig\n                                \n                                \n                                    nodeemailerConfig\n                                \n                                \n                                    smsConfig\n                                \n                                \n                                    uploadFileConfig\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/helper/services/config.service.ts:18\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/helper/services/config.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getNumber\n                        \n                    \n                \n            \n            \n                \n                        \n                    getNumber(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/helper/services/config.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        nodeEnv\n                    \n                \n\n                \n                    \n                        getnodeEnv()\n                    \n                \n                            \n                                \n                                    Defined in src/common/helper/services/config.service.ts:47\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        prismaConfig\n                    \n                \n\n                \n                    \n                        getprismaConfig()\n                    \n                \n                            \n                                \n                                    Defined in src/common/helper/services/config.service.ts:69\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        awsS3Config\n                    \n                \n\n                \n                    \n                        getawsS3Config()\n                    \n                \n                            \n                                \n                                    Defined in src/common/helper/services/config.service.ts:73\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        qrConfig\n                    \n                \n\n                \n                    \n                        getqrConfig()\n                    \n                \n                            \n                                \n                                    Defined in src/common/helper/services/config.service.ts:87\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        jwtConfig\n                    \n                \n\n                \n                    \n                        getjwtConfig()\n                    \n                \n                            \n                                \n                                    Defined in src/common/helper/services/config.service.ts:95\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        sendgridConfig\n                    \n                \n\n                \n                    \n                        getsendgridConfig()\n                    \n                \n                            \n                                \n                                    Defined in src/common/helper/services/config.service.ts:106\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        nodeemailerConfig\n                    \n                \n\n                \n                    \n                        getnodeemailerConfig()\n                    \n                \n                            \n                                \n                                    Defined in src/common/helper/services/config.service.ts:115\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        smsConfig\n                    \n                \n\n                \n                    \n                        getsmsConfig()\n                    \n                \n                            \n                                \n                                    Defined in src/common/helper/services/config.service.ts:126\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        uploadFileConfig\n                    \n                \n\n                \n                    \n                        getuploadFileConfig()\n                    \n                \n                            \n                                \n                                    Defined in src/common/helper/services/config.service.ts:134\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import * as dotenv from 'dotenv';\n\nimport { IAwsConfig } from '../../../core/interfaces/aws.interfaces';\nimport { IJWTConfig } from '../../../core/interfaces/jwt.interfaces';\nimport { INodeEmailerConfig } from '../../../core/interfaces/node-emailer.interfaces';\n// import { IPostgreSQLConfig } from '../../../core/interfaces/postgres.interfaces';\nimport { ISendGridConfig } from '../../../core/interfaces/sendgrid.interfaces';\nimport { ISMSConfig } from '../../../core/interfaces/sms.interfaces';\nimport { IUploadFileConfig } from '../../../core/interfaces/upload-file.interfaces';\n\n/**\n * Config service\n * @export\n * @class ConfigService\n */\n\nexport class ConfigService {\n    constructor() {\n        const nodeEnv = this.nodeEnv;\n        // dotenv.config({\n        //   path: nodeEnv === \"production\" ? \".env\" : `.env.${nodeEnv}`,\n        // });\n        dotenv.config({\n            path:\n                nodeEnv === 'production'\n                    ? '.env.staging'\n                    : nodeEnv === 'staging'\n                      ? '.env.staging'\n                      : '.env.development',\n        });\n\n        // // Replace \\\\n with \\n to support multiline strings in AWS\n        // for (const envName of Object.keys(process.env)) {\n        //   process.env[envName] = process.env[envName].replace(/\\\\n/g, \"\\n\");\n        // }\n    }\n\n    public get(key: string): string {\n        return process.env[key] || 'undefined';\n    }\n\n    public getNumber(key: string): number {\n        return Number(this.get(key));\n    }\n\n    get nodeEnv(): string {\n        return this.get('NODE_ENV') || 'development';\n    }\n\n    // get typeOrmConfig(): TypeOrmModuleOptions {\n    //   const dbConfig = {\n    //     // eslint-disable-next-line @typescript-eslint/prefer-as-const\n    //     type: \"mysql\" as \"mysql\",\n    //     host: this.get(\"DATABASE_HOST\"),\n    //     port: this.getNumber(\"DATABASE_PORT\"),\n    //     username: this.get(\"DATABASE_USER\"),\n    //     password: this.get(\"DATABASE_PASS\"),\n    //     database: this.get(\"DATABASE_SCHEMA\"),\n    //     authSource: \"admin\",\n    //     synchronize: true,\n    //     multipleStatements: true,\n    //     entities: [\"src/**/**.entity{.ts,.js}\"],\n    //     bigNumberStrings: false,\n    //   };\n    //   return dbConfig;\n    // }\n\n    get prismaConfig(): string {\n        return `postgresql://${this.get('POSTGRES_USER')}:${this.get('POSTGRES_PASSWORD')}@${this.get('POSTGRES_HOST')}:${this.get('POSTGRES_PORT')}/${this.get('POSTGRES_NAME')}?connection_limit=${this.get('POSTGRES_CONNECTION_LIMIT')}&pool_timeout=${this.get('POSTGRES_POOL_TIMEOUT')}&schema=${this.get('POSTGRES_SCHEMA')}`;\n    }\n\n    get awsS3Config(): IAwsConfig {\n        return {\n            AWS_S3_ACCESS_KEY_ID: this.get('AWS_S3_ACCESS_KEY_ID'),\n            AWS_S3_SECRET_ACCESS_KEY: this.get('AWS_S3_SECRET_ACCESS_KEY'),\n            AWS_S3_BUCKET_NAME: this.get('AWS_S3_BUCKET_NAME'),\n            AWS_S3_DEFAULT_REGION: this.get('AWS_S3_DEFAULT_REGION'),\n            AWS_S3_TEMP_DIRECTORY: this.get('AWS_S3_TEMP_DIRECTORY'),\n            AWS_S3_ENDPOINT: this.get('AWS_S3_ENDPOINT'),\n            AWS_S3_SERVER_HOST: this.get('AWS_S3_SERVER_HOST'),\n            AWS_S3_COMPANION_SECRET: this.get('AWS_S3_COMPANION_SECRET'),\n            TUS_STORAGE_DRIVER: this.get('TUS_STORAGE_DRIVER'),\n        };\n    }\n\n    get qrConfig() {\n        return {\n            QR_IMAGE: this.get('QR_IMAGE') || '',\n            QR_IMAGE_PATH: this.get('QR_IMAGE_PATH') || '',\n            QR_IMAGE_PATH_SALT: this.get('QR_IMAGE_PATH_SALT') || '',\n        };\n    }\n\n    get jwtConfig(): IJWTConfig {\n        return {\n            secret: this.get('JWT_SECRET_KEY'),\n            algorithm: this.get('JWT_ALGORITHM'),\n            issuer: this.get('JWT_ISSUER'),\n            audience: this.get('JWT_AUDIENCE'),\n            expiresInSeconds: this.getNumber('JWT_EXPIRES_IN_SECONDS'),\n            expirationTime: this.getNumber('JWT_EXPIRATION_TIME'),\n        };\n    }\n\n    get sendgridConfig(): ISendGridConfig {\n        return {\n            SENDGRID_API_KEY: this.get('SENDGRID_API_KEY'),\n            FROM_EMAIL: this.get('FROM_EMAIL'),\n            TO_EMAIL: this.get('TO_EMAIL'),\n            WELCOME_EMAIL: this.get('WELCOME_EMAIL'),\n        };\n    }\n\n    get nodeemailerConfig(): INodeEmailerConfig {\n        return {\n            NODE_EMAILER_HOST: this.get('NODE_EMAILER_HOST'),\n            NODE_EMAILER_PORT: this.getNumber('NODE_EMAILER_PORT'),\n            NODE_EMAILER_USER: this.get('NODE_EMAILER_USER'),\n            NODE_EMAILER_PASSWORD: this.get('NODE_EMAILER_PASSWORD'),\n            NODE_EMAILER_FROM_EMAIL: this.get('NODE_EMAILER_FROM_EMAIL'),\n            NODE_EMAILER_TO_EMAIL: this.get('NODE_EMAILER_TO_EMAIL'),\n        };\n    }\n\n    get smsConfig(): ISMSConfig {\n        return {\n            SMS_PROVIDER_NAME: this.get('SMS_PROVIDER_NAME'),\n            API_KEY: this.get('API_KEY'),\n            SENDER_ID: this.get('SENDER_ID'),\n        };\n    }\n\n    get uploadFileConfig(): IUploadFileConfig {\n        return {\n            TEMP_FILE_UPLOAD_URL: this.get('TEMP_FILE_UPLOAD_URL'),\n            FILE_UPLOAD_DESTINATION: this.get('FILE_UPLOAD_DESTINATION'),\n            MAX_UPLOAD_FILE_SIZE: this.getNumber('MAX_UPLOAD_FILE_SIZE'),\n            PROFILE_PIC_FILE_PATH: this.get('PROFILE_PIC_FILE_PATH'),\n            MULTIPLE_FILE_PATH: this.get('MULTIPLE_FILE_PATH'),\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileNotImageException.html":{"url":"classes/FileNotImageException.html","title":"class - FileNotImageException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileNotImageException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/exceptions/file-not-image.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string | any, error?: string)\n                    \n                \n                        \n                            \n                                Defined in src/core/exceptions/file-not-image.exception.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    string | any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        'use strict';\n\nimport { BadRequestException } from '@nestjs/common';\n\nexport class FileNotImageException extends BadRequestException {\n    constructor(message?: string | any, error?: string) {\n        if (message) {\n            super(message, error);\n        } else {\n            super('error.file.not_image');\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelperModule.html":{"url":"modules/HelperModule.html","title":"module - HelperModule","body":"\n                   \n\n\n\n\n    Modules\n    HelperModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelperModule\n\n\n\ncluster_HelperModule_providers\n\n\n\ncluster_HelperModule_exports\n\n\n\n\nConfigService \n\nConfigService \n\n\n\nPrismaService \n\nPrismaService \n\n\n\nHelperModule\n\nHelperModule\n\nConfigService  -->\n\nHelperModule->ConfigService \n\n\n\nPrismaService  -->\n\nHelperModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nHelperModule -->\n\nPrismaService->HelperModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/helper/helper.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConfigService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { ConfigService } from './services/config.service';\nimport { PrismaService } from './services/prisma.service';\n\nconst providers = [ConfigService, PrismaService];\n\n// @Global()\n@Module({\n    // imports: [],\n    // providers: [ConfigService, PrismaService],\n    // controllers: [],\n    // exports: [ConfigService, PrismaService],\n    providers,\n    imports: [\n        // HttpModule,\n    ],\n    exports: [...providers],\n})\nexport class HelperModule {}\n\n// import { Module } from '@nestjs/common';\n// import { JwtService } from '@nestjs/jwt';\n\n// import { EncryptionService } from './services/encryption.service';\n// import { PrismaService } from './services/prisma.service';\n// import { TaskService } from './services/task.service';\n\n// @Module({\n//   imports: [],\n//   providers: [JwtService, EncryptionService, PrismaService, TaskService],\n//   controllers: [],\n//   exports: [EncryptionService, PrismaService, TaskService],\n// })\n// export class HelperModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpErrorFilter.html":{"url":"classes/HttpErrorFilter.html","title":"class - HttpErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/exceptions/http-error.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/exceptions/http-error.filter.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        HttpException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    ExceptionFilter,\n    Catch,\n    ArgumentsHost,\n    Logger,\n    HttpException,\n    HttpStatus,\n} from '@nestjs/common';\n\n// import * as _ from 'lodash';\n\n//   import { SQLService } from \"../shared/services/sql.service\";\n\n//   import { Query } from \"./query\";\n\n@Catch()\nexport class HttpErrorFilter implements ExceptionFilter {\n    catch(exception: HttpException, host: ArgumentsHost) {\n        const ctx = host.switchToHttp();\n        const response = ctx.getResponse();\n        const request = ctx.getRequest();\n        const status = exception.getStatus\n            ? exception.getStatus()\n            : HttpStatus.INTERNAL_SERVER_ERROR;\n        const errorResponse = {\n            code: status,\n            timestamp: new Date().toLocaleTimeString,\n            path: request.url,\n            method: request.method,\n            message:\n                status !== HttpStatus.INTERNAL_SERVER_ERROR\n                    ? exception.message || null\n                    : 'Internal server error',\n        };\n\n        if (status === HttpStatus.INTERNAL_SERVER_ERROR) {\n            Logger.error(`${request.method} ${request.url}`, exception.stack, 'ExceptionFilter');\n        } else {\n            Logger.error(\n                `${request.method} ${request.url}`,\n                JSON.stringify(errorResponse),\n                'ExceptionFilter'\n            );\n        }\n\n        response.status(status).json(errorResponse);\n\n        //   try {\n        //     const sqlService = new SQLService();\n        //     const query = new Query();\n        //     const reqstrobj = { body: _.clone(request.body), header: _.clone(request.header) };\n        //     const reqstr = JSON.stringify(reqstrobj);\n\n        //     const resstrobj = { res: _.clone(errorResponse), exception: exception.stack };\n        //     const resstr = JSON.stringify(resstrobj);\n        //     sqlService.run(\n        //       query.addHttpQueryError(\"HTTPERROR\", request.method, request.url, reqstr, resstr)\n        //     );\n        //   } catch (error) {}\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filters/http-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/filters/http-exception.filter.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        HttpException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExceptionFilter, Catch, ArgumentsHost, HttpException } from '@nestjs/common';\n\nimport { Request, Response } from 'express';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n    catch(exception: HttpException, host: ArgumentsHost) {\n        const ctx = host.switchToHttp();\n        const response = ctx.getResponse();\n        const request = ctx.getRequest();\n        const status = exception.getStatus();\n\n        response.status(status).json({\n            statusCode: status,\n            timestamp: new Date().toISOString(),\n            path: request.url,\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAwsConfig.html":{"url":"interfaces/IAwsConfig.html","title":"interface - IAwsConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAwsConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/aws.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            AWS_S3_ACCESS_KEY_ID\n                                        \n                                \n                                \n                                        \n                                            AWS_S3_BUCKET_NAME\n                                        \n                                \n                                \n                                        \n                                            AWS_S3_COMPANION_SECRET\n                                        \n                                \n                                \n                                        \n                                            AWS_S3_DEFAULT_REGION\n                                        \n                                \n                                \n                                        \n                                            AWS_S3_ENDPOINT\n                                        \n                                \n                                \n                                        \n                                            AWS_S3_SECRET_ACCESS_KEY\n                                        \n                                \n                                \n                                        \n                                            AWS_S3_SERVER_HOST\n                                        \n                                \n                                \n                                        \n                                            AWS_S3_TEMP_DIRECTORY\n                                        \n                                \n                                \n                                        \n                                            TUS_STORAGE_DRIVER\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AWS_S3_ACCESS_KEY_ID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AWS_S3_ACCESS_KEY_ID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        AWS_S3_BUCKET_NAME\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AWS_S3_BUCKET_NAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        AWS_S3_COMPANION_SECRET\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AWS_S3_COMPANION_SECRET:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        AWS_S3_DEFAULT_REGION\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AWS_S3_DEFAULT_REGION:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        AWS_S3_ENDPOINT\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AWS_S3_ENDPOINT:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        AWS_S3_SECRET_ACCESS_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AWS_S3_SECRET_ACCESS_KEY:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        AWS_S3_SERVER_HOST\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AWS_S3_SERVER_HOST:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        AWS_S3_TEMP_DIRECTORY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AWS_S3_TEMP_DIRECTORY:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TUS_STORAGE_DRIVER\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TUS_STORAGE_DRIVER:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        'use strict';\n\nexport interface IAwsConfig {\n    AWS_S3_ACCESS_KEY_ID: string;\n    AWS_S3_SECRET_ACCESS_KEY: string;\n    AWS_S3_BUCKET_NAME: string;\n    AWS_S3_DEFAULT_REGION: string;\n    AWS_S3_TEMP_DIRECTORY: string;\n    AWS_S3_ENDPOINT: string;\n\n    AWS_S3_SERVER_HOST: string;\n    AWS_S3_COMPANION_SECRET: string;\n    TUS_STORAGE_DRIVER: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFile.html":{"url":"interfaces/IFile.html","title":"interface - IFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/file.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            buffer\n                                        \n                                \n                                \n                                        \n                                            encoding\n                                        \n                                \n                                \n                                        \n                                            fieldname\n                                        \n                                \n                                \n                                        \n                                            mimetype\n                                        \n                                \n                                \n                                        \n                                            originalname\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        buffer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        buffer:     Buffer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Buffer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        encoding\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        encoding:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fieldname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mimetype\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mimetype:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        originalname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        originalname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        'use strict';\n\nexport interface IFile {\n    encoding: string;\n    buffer: Buffer;\n    fieldname: string;\n    mimetype: string;\n    originalname: string;\n    size: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IJWTConfig.html":{"url":"interfaces/IJWTConfig.html","title":"interface - IJWTConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IJWTConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/jwt.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            algorithm\n                                        \n                                \n                                \n                                        \n                                            audience\n                                        \n                                \n                                \n                                        \n                                            expirationTime\n                                        \n                                \n                                \n                                        \n                                            expiresInSeconds\n                                        \n                                \n                                \n                                        \n                                            issuer\n                                        \n                                \n                                \n                                        \n                                            secret\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        algorithm\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        algorithm:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        audience\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        audience:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expirationTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expirationTime:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiresInSeconds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiresInSeconds:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issuer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issuer:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secret\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        'use strict';\n\nexport interface IJWTConfig {\n    secret: string;\n    algorithm: string;\n    expiresInSeconds: number;\n    expirationTime: number;\n    issuer: string;\n    audience: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INodeEmailerConfig.html":{"url":"interfaces/INodeEmailerConfig.html","title":"interface - INodeEmailerConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INodeEmailerConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/node-emailer.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            NODE_EMAILER_FROM_EMAIL\n                                        \n                                \n                                \n                                        \n                                            NODE_EMAILER_HOST\n                                        \n                                \n                                \n                                        \n                                            NODE_EMAILER_PASSWORD\n                                        \n                                \n                                \n                                        \n                                            NODE_EMAILER_PORT\n                                        \n                                \n                                \n                                        \n                                            NODE_EMAILER_TO_EMAIL\n                                        \n                                \n                                \n                                        \n                                            NODE_EMAILER_USER\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        NODE_EMAILER_FROM_EMAIL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        NODE_EMAILER_FROM_EMAIL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        NODE_EMAILER_HOST\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        NODE_EMAILER_HOST:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        NODE_EMAILER_PASSWORD\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        NODE_EMAILER_PASSWORD:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        NODE_EMAILER_PORT\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        NODE_EMAILER_PORT:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        NODE_EMAILER_TO_EMAIL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        NODE_EMAILER_TO_EMAIL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        NODE_EMAILER_USER\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        NODE_EMAILER_USER:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        'use strict';\n\nexport interface INodeEmailerConfig {\n    NODE_EMAILER_HOST: string;\n    NODE_EMAILER_PORT: number;\n    NODE_EMAILER_USER: string;\n    NODE_EMAILER_PASSWORD: string;\n    NODE_EMAILER_FROM_EMAIL: string;\n    NODE_EMAILER_TO_EMAIL: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPostgreSQLConfig.html":{"url":"interfaces/IPostgreSQLConfig.html","title":"interface - IPostgreSQLConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPostgreSQLConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/postgres.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            POSTGRES_CONNECTION_LIMIT\n                                        \n                                \n                                \n                                        \n                                            POSTGRES_HOST\n                                        \n                                \n                                \n                                        \n                                            POSTGRES_NAME\n                                        \n                                \n                                \n                                        \n                                            POSTGRES_PASSWORD\n                                        \n                                \n                                \n                                        \n                                            POSTGRES_POOL_TIMEOUT\n                                        \n                                \n                                \n                                        \n                                            POSTGRES_PORT\n                                        \n                                \n                                \n                                        \n                                            POSTGRES_SCHEMA\n                                        \n                                \n                                \n                                        \n                                            POSTGRES_USER\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        POSTGRES_CONNECTION_LIMIT\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        POSTGRES_CONNECTION_LIMIT:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        POSTGRES_HOST\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        POSTGRES_HOST:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        POSTGRES_NAME\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        POSTGRES_NAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        POSTGRES_PASSWORD\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        POSTGRES_PASSWORD:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        POSTGRES_POOL_TIMEOUT\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        POSTGRES_POOL_TIMEOUT:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        POSTGRES_PORT\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        POSTGRES_PORT:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        POSTGRES_SCHEMA\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        POSTGRES_SCHEMA:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        POSTGRES_USER\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        POSTGRES_USER:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        'use strict';\n\nexport interface IPostgreSQLConfig {\n    POSTGRES_HOST: string;\n    POSTGRES_PORT: string;\n    POSTGRES_USER: string;\n    POSTGRES_PASSWORD: string;\n    POSTGRES_NAME: string;\n    POSTGRES_CONNECTION_LIMIT: string;\n    POSTGRES_POOL_TIMEOUT: string;\n    POSTGRES_SCHEMA: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISMSConfig.html":{"url":"interfaces/ISMSConfig.html","title":"interface - ISMSConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISMSConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/sms.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            API_KEY\n                                        \n                                \n                                \n                                        \n                                            SENDER_ID\n                                        \n                                \n                                \n                                        \n                                            SMS_PROVIDER_NAME\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        API_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        API_KEY:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SENDER_ID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SENDER_ID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SMS_PROVIDER_NAME\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SMS_PROVIDER_NAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        'use strict';\n\nexport interface ISMSConfig {\n    SMS_PROVIDER_NAME: string;\n    API_KEY: string;\n    SENDER_ID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISendGridConfig.html":{"url":"interfaces/ISendGridConfig.html","title":"interface - ISendGridConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISendGridConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/sendgrid.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            FROM_EMAIL\n                                        \n                                \n                                \n                                        \n                                            SENDGRID_API_KEY\n                                        \n                                \n                                \n                                        \n                                            TO_EMAIL\n                                        \n                                \n                                \n                                        \n                                            WELCOME_EMAIL\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        FROM_EMAIL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        FROM_EMAIL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SENDGRID_API_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SENDGRID_API_KEY:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TO_EMAIL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TO_EMAIL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        WELCOME_EMAIL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        WELCOME_EMAIL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        'use strict';\n\nexport interface ISendGridConfig {\n    SENDGRID_API_KEY: string;\n    FROM_EMAIL: string;\n    TO_EMAIL: string;\n    WELCOME_EMAIL: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUploadFileConfig.html":{"url":"interfaces/IUploadFileConfig.html","title":"interface - IUploadFileConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUploadFileConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/upload-file.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            FILE_UPLOAD_DESTINATION\n                                        \n                                \n                                \n                                        \n                                            MAX_UPLOAD_FILE_SIZE\n                                        \n                                \n                                \n                                        \n                                            MULTIPLE_FILE_PATH\n                                        \n                                \n                                \n                                        \n                                            PROFILE_PIC_FILE_PATH\n                                        \n                                \n                                \n                                        \n                                            TEMP_FILE_UPLOAD_URL\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        FILE_UPLOAD_DESTINATION\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        FILE_UPLOAD_DESTINATION:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MAX_UPLOAD_FILE_SIZE\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        MAX_UPLOAD_FILE_SIZE:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MULTIPLE_FILE_PATH\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        MULTIPLE_FILE_PATH:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        PROFILE_PIC_FILE_PATH\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        PROFILE_PIC_FILE_PATH:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TEMP_FILE_UPLOAD_URL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TEMP_FILE_UPLOAD_URL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        'use strict';\n\nexport interface IUploadFileConfig {\n    TEMP_FILE_UPLOAD_URL: string;\n    FILE_UPLOAD_DESTINATION: string;\n    MAX_UPLOAD_FILE_SIZE: number;\n    PROFILE_PIC_FILE_PATH: string;\n    MULTIPLE_FILE_PATH: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PrismaClientExceptionFilter.html":{"url":"classes/PrismaClientExceptionFilter.html","title":"class - PrismaClientExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PrismaClientExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filters/prisma-exception.filter.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: Prisma.PrismaClientKnownRequestError, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/filters/prisma-exception.filter.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        Prisma.PrismaClientKnownRequestError\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, HttpStatus } from '@nestjs/common';\nimport { BaseExceptionFilter } from '@nestjs/core';\n\nimport { Prisma } from '@prisma/client';\nimport { Response } from 'express';\n\n@Catch(Prisma.PrismaClientKnownRequestError)\nexport class PrismaClientExceptionFilter extends BaseExceptionFilter {\n    catch(exception: Prisma.PrismaClientKnownRequestError, host: ArgumentsHost) {\n        console.error(exception.message);\n        const ctx = host.switchToHttp();\n        const response = ctx.getResponse();\n        const message = exception.message.replace(/\\n/g, '');\n        switch (exception.code) {\n            case 'P2002': {\n                const status = HttpStatus.CONFLICT;\n                response.status(status).json({\n                    statusCode: status,\n                    message: message,\n                });\n                break;\n            }\n            default:\n                // default 500 error code\n                super.catch(exception, host);\n                break;\n        }\n    }\n\n    //   catch(exception: PrismaClientKnownRequestError, host: ArgumentsHost) {\n    //     const ctx = host.switchToHttp();\n    //     const response = ctx.getResponse();\n    //     const status = HttpStatus.BAD_REQUEST;\n\n    //     const errorResponse = {\n    //       statusCode: status,\n    //       timestamp: new Date().toISOString(),\n    //       message: exception.message,\n    //     };\n\n    //     response.status(status).json(errorResponse);\n    //   }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helper/services/prisma.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Prisma service\n\n            \n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                executeRawQuery\n                            \n                            \n                                    Async\n                                executeTransaction\n                            \n                            \n                                    Async\n                                isHealthy\n                            \n                            \n                                    Async\n                                onModuleDestroy\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/helper/services/prisma.service.ts:15\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        executeRawQuery\n                        \n                    \n                \n            \n            \n                \n                        \n                    executeRawQuery(query: string, params?: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/helper/services/prisma.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                params\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        executeTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    executeTransaction(actions: (prisma: Prisma.TransactionClient) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/helper/services/prisma.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                actions\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        isHealthy\n                        \n                    \n                \n            \n            \n                \n                        \n                    isHealthy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/helper/services/prisma.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/helper/services/prisma.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/helper/services/prisma.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit, OnModuleDestroy } from '@nestjs/common';\nimport { HealthIndicatorResult } from '@nestjs/terminus';\n\nimport { Prisma, PrismaClient } from '@prisma/client';\n\nimport { ConfigService } from '../services/config.service';\n\n/**\n * Prisma service\n * @export\n * @class PrismaService\n */\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit, OnModuleDestroy {\n    constructor() {\n        const configService = new ConfigService();\n        // console.log(\n        //     'ConfigService-------------------------------------------------',\n        //     configService.prismaConfig\n        // );\n        super({\n            datasources: {\n                db: {\n                    url: configService.prismaConfig,\n                },\n            },\n        });\n    }\n\n    async onModuleInit() {\n        await this.$connect();\n    }\n\n    async onModuleDestroy() {\n        await this.$disconnect();\n    }\n\n    async executeRawQuery(query: string, params?: any[]): Promise {\n        return this.$queryRawUnsafe(query, ...params);\n    }\n\n    async executeTransaction(\n        actions: (prisma: Prisma.TransactionClient) => Promise\n    ): Promise {\n        return this.$transaction(actions);\n    }\n\n    async isHealthy(): Promise {\n        try {\n            const x = await this.$queryRaw`SELECT 1`;\n            console.log('RESULTTTTTTTTTTTTTTTTTTTT', x);\n            return Promise.resolve({\n                prisma: {\n                    status: 'up',\n                },\n            });\n        } catch (e) {\n            return Promise.resolve({\n                prisma: {\n                    status: 'down',\n                },\n            });\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Query.html":{"url":"classes/Query.html","title":"class - Query","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Query\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filters/query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addQueryError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addQueryError\n                        \n                    \n                \n            \n            \n                \naddQueryError(module: any, method: any, url: any, reqdata: string, resdata: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/filters/query.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                module\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                method\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                url\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                reqdata\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                resdata\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { name: string; type: string; syntax: () => string; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Query {\n    addQueryError(module: any, method: any, url: any, reqdata: string, resdata: string) {\n        return {\n            name: `addQueryError`,\n            type: `INSERT`,\n            syntax: () => {\n                // data: any[]\n                try {\n                    let reqescValue = reqdata;\n                    let resescValue = resdata;\n                    reqescValue = reqescValue.replace(/'/g, \"\\\\'\");\n                    resescValue = resescValue.replace(/'/g, \"\\\\'\");\n                    const sql = `INSERT INTO Error (Module,Method,Url,Req,Response) VALUES\n                ('${module}','${method}','${url}','${reqescValue}','${resescValue}');`;\n                    return sql;\n                } catch (error) {\n                    return `Select ${module} ,${method},${url},${reqdata},${resdata}`;\n                }\n            },\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Query-1.html":{"url":"classes/Query-1.html","title":"class - Query-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Query\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/exceptions/query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addHttpQueryError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addHttpQueryError\n                        \n                    \n                \n            \n            \n                \naddHttpQueryError(module: any, method: any, url: any, reqdata: string, resdata: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/exceptions/query.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                module\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                method\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                url\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                reqdata\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                resdata\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { name: string; type: string; syntax: () => string; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Query {\n    addHttpQueryError(module: any, method: any, url: any, reqdata: string, resdata: string) {\n        return {\n            name: `addQueryError`,\n            type: `INSERT`,\n            syntax: () => {\n                //data: any[]\n                try {\n                    let reqescValue = reqdata;\n                    let resescValue = resdata;\n                    reqescValue = reqescValue.replace(/'/g, \"\\\\'\");\n                    resescValue = resescValue.replace(/'/g, \"\\\\'\");\n                    const sql = `INSERT INTO Error (Module,Method,Url,Req,Response) VALUES\n                ('${module}','${method}','${url}','${reqescValue}','${resescValue}');`;\n                    return sql;\n                } catch (error) {\n                    return `Select ${module} ,${method},${url},${reqdata},${resdata}`;\n                }\n            },\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryFailedFilter.html":{"url":"classes/QueryFailedFilter.html","title":"class - QueryFailedFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryFailedFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filters/query-failed.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                reflector\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/core/filters/query-failed.filter.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        reflector\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Reflector\n\n                    \n                \n                    \n                        \n                                Defined in src/core/filters/query-failed.filter.ts:16\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: any, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/filters/query-failed.filter.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { STATUS_CODES } from 'http';\n\nimport { ArgumentsHost, ExceptionFilter, HttpStatus, Logger } from '@nestjs/common'; // Catch\nimport { Reflector } from '@nestjs/core';\n\nimport { Response } from 'express';\n// import { QueryFailedError } from \"typeorm\";\n// import * as _ from 'lodash';\n\n// import { PgSQLService } from \"../common/shared/services/pgsql.service\";\nimport { constraintErrors } from './constraint-errors';\n// import { Query } from './query';\n\n// @Catch(QueryFailedError)\nexport class QueryFailedFilter implements ExceptionFilter {\n    constructor(public reflector: Reflector) {}\n\n    catch(exception: any, host: ArgumentsHost) {\n        const ctx = host.switchToHttp();\n        const response = ctx.getResponse();\n        const request = ctx.getRequest();\n\n        const errorMessage = constraintErrors[exception.constraint];\n\n        const status =\n            exception.constraint && exception.constraint.startsWith('UQ')\n                ? HttpStatus.CONFLICT\n                : HttpStatus.INTERNAL_SERVER_ERROR;\n\n        const errorResponse = {\n            message: exception.sqlMessage,\n            query: exception.query,\n        };\n\n        try {\n            Logger.error(\n                `${request.method} ${request.url}`,\n                JSON.stringify(errorResponse),\n                'ExceptionFilter'\n            );\n\n            // const sqlService = new PgSQLService();\n            // const query = new Query();\n            // const reqstr = JSON.stringify(_.clone(request.body));\n            // const resstr = JSON.stringify(_.clone(errorResponse));\n            // sqlService.run(query.addQueryError(\"DBQuery\", request.method, request.url, reqstr, resstr));\n        } catch (error) {\n            Logger.error(\n                `${request.method} ${request.url}`,\n                JSON.stringify(errorResponse),\n                'ExceptionFilter'\n            );\n        }\n        response.status(status).json({\n            statusCode: status,\n            error: STATUS_CODES[status],\n            message: errorMessage,\n        });\n    }\n}\n\n// import { ArgumentsHost, Catch, ExceptionFilter, HttpException, HttpStatus } from '@nestjs/common';\n// import { Response } from 'express';\n// import { Prisma } from '@prisma/client';\n\n// @Catch(Prisma.PrismaClientKnownRequestError)\n// export class PrismaClientExceptionFilter implements ExceptionFilter {\n//   catch(exception: Prisma.PrismaClientKnownRequestError, host: ArgumentsHost) {\n//     const ctx = host.switchToHttp();\n//     const response = ctx.getResponse();\n//     const status = HttpStatus.INTERNAL_SERVER_ERROR;\n\n//     let message = exception.message;\n\n//     // Handle specific Prisma errors\n//     if (exception.code === 'P2002') {\n//       message = 'Unique constraint failed';\n//     }\n\n//     response.status(status).json({\n//       statusCode: status,\n//       message,\n//     });\n//   }\n// }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserNotFoundException.html":{"url":"classes/UserNotFoundException.html","title":"class - UserNotFoundException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserNotFoundException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/exceptions/user-not-found.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        NotFoundException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(error?: string)\n                    \n                \n                        \n                            \n                                Defined in src/core/exceptions/user-not-found.exception.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        'use strict';\n\nimport { NotFoundException } from '@nestjs/common';\n\nexport class UserNotFoundException extends NotFoundException {\n    constructor(error?: string) {\n        super('error.user_not_found', error);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\n[1.0.1] - 2024-07-01\n\nFixed issue with configuration\nUpdated dependencies\n\n[1.0.0] - 2024-06-25\n\nInitial release\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\n2. CONTRIBUTING.md\nGuidelines for contributing to your project.\nExample:\nExample :# Contributing to Project Name\n\nWe welcome contributions from the community. Please follow these guidelines to ensure a smooth process for everyone.\n\n## How to Contribute\n\n### Reporting Bugs\nIf you find a bug, please open an issue on GitHub and include as much information as possible.\n\n### Suggesting Features\nWe welcome feature requests! Please open an issue on GitHub and describe the feature in detail.\n\n### Code Contributions\n1. Fork the repository.\n2. Create a new branch (`git checkout -b feature-name`).\n3. Make your changes.\n4. Commit your changes (`git commit -m 'Add feature'`).\n5. Push to the branch (`git push origin feature-name`).\n6. Open a pull request on GitHub.\n\n## Code Style\nPlease adhere to the code style used in the project. We use [tool/linter] for code formatting and linting.\n\n## Running Tests\nEnsure that all tests pass before submitting a pull request. Run tests with:\n```sh\nyarn test\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/helper/helper.module.ts\n            \n            variable\n            providers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helper/services/config.service.ts\n            \n            class\n            ConfigService\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/common/helper/services/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/core/constants/core.constant.ts\n            \n            variable\n            HTTP_STATUS_MESSAGES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/constants/core.constant.ts\n            \n            variable\n            PUBLIC_ROUTE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/constants/core.constant.ts\n            \n            variable\n            RESPONSE_SERIALIZATION_META_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/decorators/public.request.decorator.ts\n            \n            variable\n            PublicRoute\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/exceptions/file-not-image.exception.ts\n            \n            class\n            FileNotImageException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/exceptions/http-error.filter.ts\n            \n            class\n            HttpErrorFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/exceptions/query.ts\n            \n            class\n            Query\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/exceptions/user-not-found.exception.ts\n            \n            class\n            UserNotFoundException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/filters/all-exceptions.filter.ts\n            \n            class\n            AllExceptionsFilter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/core/filters/bad-request.filter.ts\n            \n            class\n            BadRequestExceptionFilter\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/core/filters/constraint-errors.ts\n            \n            variable\n            constraintErrors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/filters/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/filters/prisma-exception.filter.ts\n            \n            class\n            PrismaClientExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/filters/query-failed.filter.ts\n            \n            class\n            QueryFailedFilter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/core/filters/query.ts\n            \n            class\n            Query\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/interfaces/aws.interfaces.ts\n            \n            interface\n            IAwsConfig\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/core/interfaces/file.interfaces.ts\n            \n            interface\n            IFile\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/core/interfaces/jwt.interfaces.ts\n            \n            interface\n            IJWTConfig\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/core/interfaces/node-emailer.interfaces.ts\n            \n            interface\n            INodeEmailerConfig\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/core/interfaces/postgres.interfaces.ts\n            \n            interface\n            IPostgreSQLConfig\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/core/interfaces/sendgrid.interfaces.ts\n            \n            interface\n            ISendGridConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/core/interfaces/sms.interfaces.ts\n            \n            interface\n            ISMSConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/core/interfaces/upload-file.interfaces.ts\n            \n            interface\n            IUploadFileConfig\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/swagger.ts\n            \n            function\n            Unnamed function\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.3.9\n        \n            @nestjs/config : ^3.2.2\n        \n            @nestjs/core : ^10.3.9\n        \n            @nestjs/platform-express : ^10.3.9\n        \n            @nestjs/swagger : ^7.3.1\n        \n            @nestjs/terminus : ^10.2.3\n        \n            @prisma/client : ^5.16.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            compression : ^1.7.4\n        \n            express : ^4.19.2\n        \n            express-rate-limit : ^7.3.1\n        \n            helmet : ^7.1.0\n        \n            pg : ^8.12.0\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            Unnamed function   (src/.../swagger.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Unnamed function\n                        \n                    \n                \n            \n            \n                \nUnnamed function(app: INestApplication)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                app\n                                            \n                                                        INestApplication\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNestJS Starter Boilerplate\nIntroduction\nThis project is a nestjs starter. It aims to nestjs bootstrap. The main features include:\n\nFeature 1\nFeature 2\nFeature 3\n\nGetting Started\nPrerequisites\nEnsure you have the following installed:\n\nNode.js (20+)\nYarn or npm (yarn recomandation)\nDocker (if applicable)\n\nInstallation\n\nClone the repository:Example :git clone https://github.com/dharmesh--patel/nestjs-starter.git\ncd yourproject\n\nVisual Studio Code Extensions\nExample :- ESLint - `dbaeumer.vscode-eslint` - Dirk Baeumer\n\n- Prettier - Code formatter by `esbenp.prettier-vscode` - Esben Petersen\n \n- Prisma - `Prisma.prisma` - prisma.io\n\n- Dockfile - `foxundermoon.shell-format` - foxundermoon\n\n- markdown - `yzhang.markdown-all-in-one` - Yu Zhang\n\n- To open the command pallette, \n  you can use Command + Shift + P on Mac or Control + Shift + P on Windows. \n  In the command pallette search format, then choose Format Document.Installation\nExample :$ yarnRunning Server\nDevelopment / Staging / Production\nExample :# development\n$ yarn start\n\n# staging\n$ yarn staging\n\n# production\n$ yarn productionBuild\nExample :yarn buildTests\nExample :# unit tests\n$ yarn test\n\n# e2e tests\n$ yarn test:e2e\n\n# test coverage\n$ yarn test:covDatabase Migration Development\nExample :   # Change in database file (it will create migration file in prisma/migration)\n   $ yarn migrationDocker Container and Database Migration for Staging/Production\nExample :   # To run docker file run script (it will create docker container run update database)\n   $ bash ./start.sh staging/productionDocker Container down\nExample :   # To run docker file run script (it will create docker container run update database)\n   $ bash ./stop.sh staging/productionRunning all services on Docker\nExample :docker-compose up --buildRun only database and redis services on Docker\nExample :docker-compose up postgres redisSwagger Documentation\n\nSwagger documentation endpoint will be running at  /docs .\n\nK8s Deployment Local\nExample :# first start minikube\nminikube start\n\n# deployment\nkubectl apply -f k8s/\n\n# get endpoint of k8s cluster\nminikube service nestjs-starter-service\n\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nLicense\nNest is MIT licensed.\nAuthor\n🇮🇳 Dharmesh Patel \nGithub\nLinkedin\nInstagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2024 Dharmesh Patel\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApiModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelperModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_HelperModule\n\n\n\ncluster_HelperModule_exports\n\n\n\ncluster_HelperModule_providers\n\n\n\n\nApiModule\n\nApiModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiModule->AppModule\n\n\n\n\n\nHelperModule\n\nHelperModule\n\nAppModule -->\n\nHelperModule->AppModule\n\n\n\n\n\nConfigService \n\nConfigService \n\nConfigService  -->\n\nHelperModule->ConfigService \n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nHelperModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nHelperModule -->\n\nPrismaService->HelperModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.0\n        \n            Description : Nest TypeScript starter repository\n        \n            Homepage : https://github.com/dharmesh-r-patel/nestjs-starter.git#readme\n        \n            Bugs : https://github.com/dharmesh-r-patel/nestjs-starter.git/issues\n        \n            License : MIT\n        \n            Repository : git+https://github.com/dharmesh-r-patel/nestjs-starter.git\n        \n            Author : Dharmesh Patel\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            constraintErrors   (src/.../constraint-errors.ts)\n                        \n                        \n                            HTTP_STATUS_MESSAGES   (src/.../core.constant.ts)\n                        \n                        \n                            providers   (src/.../helper.module.ts)\n                        \n                        \n                            PUBLIC_ROUTE_KEY   (src/.../core.constant.ts)\n                        \n                        \n                            PublicRoute   (src/.../public.request.decorator.ts)\n                        \n                        \n                            RESPONSE_SERIALIZATION_META_KEY   (src/.../core.constant.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/filters/constraint-errors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        constraintErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Default value : {\n    UQ_97672ac88f789774dd47f7c8be3: 'error.unique.email',\n}\n                    \n                \n\n\n        \n    \n\n    src/core/constants/core.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HTTP_STATUS_MESSAGES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    200: 'OK',\n    201: 'Created',\n    202: 'Accepted',\n    203: 'NonAuthoritativeInfo',\n    204: 'NoContent',\n    205: 'ResetContent',\n    206: 'PartialContent',\n    301: 'Move Permanently',\n    302: 'Found',\n    304: 'Not Modified',\n    307: 'Temporary Redirect',\n    308: 'Permanent Redirect',\n    400: 'Bad Request',\n    401: 'Unauthorized',\n    403: 'Forbidden',\n    404: 'Not Found',\n    405: 'Method Not Allowed',\n    406: 'Not Acceptable',\n    409: 'Conflict',\n    413: 'Payload Too Large',\n    414: 'URI Too Large',\n    415: 'Unsupported Media Type',\n    422: 'Unprocessable Entity',\n    429: 'Too Many Requests',\n    500: 'Internal Server Error',\n    501: 'Not Implemented',\n    502: 'Bad Gateway',\n    503: 'Service Unavailable',\n    504: 'Gateway Timeout',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PUBLIC_ROUTE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'PUBLIC'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RESPONSE_SERIALIZATION_META_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ResponseSerializationMetaKey'\n                    \n                \n\n\n        \n    \n\n    src/common/helper/helper.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        providers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [ConfigService, PrismaService]\n                    \n                \n\n\n        \n    \n\n    src/core/decorators/public.request.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PublicRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): CustomDecorator => SetMetadata(PUBLIC_ROUTE_KEY, true)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
